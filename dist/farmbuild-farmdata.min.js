"use strict";angular.module("farmbuild.farmdata",["farmbuild.core"]),window.farmbuild.farmdata={},angular.injector(["ng","farmbuild.farmdata"]),angular.module("farmbuild.farmdata").factory("farmdata",function($log,farmdataSession,farmdataValidator,validations){var farmdata={session:farmdataSession,validator:farmdataValidator},isEmpty=validations.isEmpty,defaults={id:""+(new Date).getTime(),name:"My new farm",geometry:{type:"Polygon",crs:"EPSG:4283",coordinates:[]}},create=function(name,id){return{version:1,dateCreated:new Date,dateLastUpdated:new Date,id:isEmpty(id)?defaults.id:id,name:isEmpty(name)?defaults.name:name,geometry:angular.copy(defaults.geometry),area:0,areaUnit:"hectare"}};return farmdata.defaultValues=function(){return angular.copy(defaults)},farmdata.isFarmData=function(farmData){return farmdataValidator.validate(farmData)},farmdata.validate=function(farmData){return farmdataValidator.validate(farmData)},farmdata.create=function(name,id){return create(name,id)},farmdata.load=farmdataSession.load,farmdata.find=farmdataSession.find,farmdata.save=function(farmData){return farmdataSession.save(farmData).find()},farmdata.update=function(farmData){return farmdataSession.update(farmData).find()},window.farmbuild.farmdata=farmdata,farmdata}),angular.module("farmbuild.farmdata").factory("farmdataSession",function($log,$filter,farmdataValidator,validations){{var farmdataSession={};validations.isDefined}return farmdataSession.clear=function(){return sessionStorage.clear(),farmdataSession},farmdataSession.save=function(farmData){return $log.info("saving farmData"),farmdataValidator.validate(farmData)?(sessionStorage.setItem("farmData",angular.toJson(farmData)),farmdataSession):($log.error("Unable to save farmData... it is invalid"),farmdataSession)},farmdataSession.update=function(farmData){return $log.info("update farmData"),farmData.dateLastUpdated=new Date,farmdataSession.save(farmData),farmdataSession},farmdataSession.find=function(){var json=sessionStorage.getItem("farmData");return null===json?void 0:angular.fromJson(json)},farmdataSession.load=function(farmData){return farmdataValidator.validate(farmData)?farmdataSession.save(farmData).find():void $log.error("Unable to load farmData... it is invalid")},farmdataSession["export"]=function(document,farmData){var a=document.createElement("a"),name="farmdata-"+farmData.name.replace(/\W+/g,"")+"-"+$filter("date")(new Date,"yyyyMMddHHmmss")+".json";a.id="downloadFarmData",document.body.appendChild(a),angular.element("a#downloadFarmData").attr({download:name,href:"data:application/json;charset=utf8,"+encodeURIComponent(JSON.stringify(farmData,void 0,2))}).get(0).click()},farmdataSession.isLoadFlagSet=function(location){var load=!1;return location.href.split("?").length>1&&0===location.href.split("?")[1].indexOf("load")&&(load="true"===location.href.split("?")[1].split("=")[1]),load},farmdataSession.setLoadFlag=function(location){var path=farmdataSession.clearLoadFlag(location);return path+"?load=true"},farmdataSession.clearLoadFlag=function(location){var path=location.href.toString(),path=path.substring(0,path.indexOf("?"));return path},farmdataSession}),angular.module("farmbuild.core").factory("farmdataValidator",function(validations,$log){function _validate(farmData){return $log.info("validating farmData..."),_isDefined(farmData)?_isObject(farmData)?farmData.hasOwnProperty("name")&&_isString(farmData.name)&&!_isEmpty(farmData.name)&&_isDefined(farmData.area)&&_isPositiveNumberOrZero(farmData.area)&&angular.equals(farmData.areaUnit,areaUnitDefault)?!0:($log.error("farmData must have name, area (positve number or zero) and areaUnit (must be "+areaUnitDefault+"): %j",farmData),!1):($log.error("farmData must be a javascript Object."),!1):($log.error("farmData is undefined."),!1)}var farmdataValidator={},_isDefined=validations.isDefined,_isPositiveNumberOrZero=(validations.isArray,validations.isPositiveNumber,validations.isPositiveNumberOrZero),_isEmpty=validations.isEmpty,_isObject=validations.isObject,_isString=validations.isString,areaUnitDefault="hectare";return farmdataValidator.validate=_validate,farmdataValidator});