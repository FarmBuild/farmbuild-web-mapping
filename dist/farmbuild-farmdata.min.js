!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n;"undefined"!=typeof window?n=window:"undefined"!=typeof global?n=global:"undefined"!=typeof self&&(n=self),n.geojsonhint=e()}}(function(){return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(_dereq_,module,exports){function hint(str){function root(_){_.type?types[_.type]?_&&types[_.type](_):errors.push({message:"The type "+_.type+" is unknown",line:_.__line__}):errors.push({message:"The type property is required and was not found",line:_.__line__})}function everyIs(_,type){return _.every(function(x){return null!==x&&typeof x===type})}function requiredProperty(_,name,type){if("undefined"==typeof _[name])return errors.push({message:'"'+name+'" property required',line:_.__line__});if("array"===type){if(!Array.isArray(_[name]))return errors.push({message:'"'+name+'" property should be an array, but is an '+typeof _[name]+" instead",line:_.__line__})}else if(type&&typeof _[name]!==type)return errors.push({message:'"'+name+'" property should be '+type+", but is an "+typeof _[name]+" instead",line:_.__line__})}function FeatureCollection(_){if(crs(_),bbox(_),!requiredProperty(_,"features","array")){if(!everyIs(_.features,"object"))return errors.push({message:"Every feature must be an object",line:_.__line__});_.features.forEach(Feature)}}function position(_,line){return Array.isArray(_)?_.length<2?errors.push({message:"position must have 2 or more elements",line:_.__line__||line}):everyIs(_,"number")?void 0:errors.push({message:"each element in a position must be a number",line:_.__line__||line}):errors.push({message:"position should be an array, is a "+typeof _+" instead",line:_.__line__||line})}function positionArray(coords,type,depth,line){if(void 0===line&&void 0!==coords.__line__&&(line=coords.__line__),0===depth)return position(coords,line);if(1===depth&&type)if("LinearRing"===type){if(!Array.isArray(coords[coords.length-1]))return errors.push({message:"a number was found where a coordinate array should have been found: this needs to be nested more deeply",line:line});coords.length<4&&errors.push({message:"a LinearRing of coordinates needs to have four or more positions",line:line}),!coords.length||coords[coords.length-1].length===coords[0].length&&coords[coords.length-1].every(function(position,index){return coords[0][index]===position})||errors.push({message:"the first and last positions in a LinearRing of coordinates must be the same",line:line})}else"Line"===type&&coords.length<2&&errors.push({message:"a line needs to have two or more coordinates to be valid",line:line});return Array.isArray(coords)?void coords.forEach(function(c){positionArray(c,type,depth-1,c.__line__||line)}):errors.push({message:"coordinates must be list of positions",line:line})}function crs(_){if(_.crs)if("object"==typeof _.crs){var strErr=requiredProperty(_.crs,"type","string"),propErr=requiredProperty(_.crs,"properties","object");strErr||propErr||("name"==_.crs.type?requiredProperty(_.crs.properties,"name","string"):"link"==_.crs.type&&requiredProperty(_.crs.properties,"href","string"))}else errors.push({message:"the value of the crs property must be an object, not a "+typeof _.crs,line:_.__line__})}function bbox(_){if(_.bbox)if(Array.isArray(_.bbox)){if(!everyIs(_.bbox,"number"))return errors.push({message:"each element in a bbox property must be a number",line:_.bbox.__line__})}else errors.push({message:"bbox property must be an array of numbers, but is a "+typeof _.bbox,line:_.__line__})}function Point(_){crs(_),bbox(_),requiredProperty(_,"coordinates","array")||position(_.coordinates)}function Polygon(_){crs(_),bbox(_),requiredProperty(_,"coordinates","array")||positionArray(_.coordinates,"LinearRing",2)}function MultiPolygon(_){crs(_),bbox(_),requiredProperty(_,"coordinates","array")||positionArray(_.coordinates,"LinearRing",3)}function LineString(_){crs(_),bbox(_),requiredProperty(_,"coordinates","array")||positionArray(_.coordinates,"Line",1)}function MultiLineString(_){crs(_),bbox(_),requiredProperty(_,"coordinates","array")||positionArray(_.coordinates,"Line",2)}function MultiPoint(_){crs(_),bbox(_),requiredProperty(_,"coordinates","array")||positionArray(_.coordinates,"",1)}function GeometryCollection(_){crs(_),bbox(_),requiredProperty(_,"geometries","array")||_.geometries.forEach(function(geometry){geometry&&root(geometry)})}function Feature(_){crs(_),bbox(_),void 0!==_.id&&"string"!=typeof _.id&&"number"!=typeof _.id&&errors.push({message:'Feature "id" property must have a string or number value',line:_.__line__}),"Feature"!==_.type&&errors.push({message:"GeoJSON features must have a type=feature property",line:_.__line__}),requiredProperty(_,"properties","object"),requiredProperty(_,"geometry","object")||_.geometry&&root(_.geometry)}var gj,errors=[],types={Point:Point,Feature:Feature,MultiPoint:MultiPoint,LineString:LineString,MultiLineString:MultiLineString,FeatureCollection:FeatureCollection,GeometryCollection:GeometryCollection,Polygon:Polygon,MultiPolygon:MultiPolygon};if("string"!=typeof str)return[{message:"Expected string input",line:0}];try{gj=jsonlint.parse(str)}catch(e){var match=e.message.match(/line (\d+)/),lineNumber=0;return match&&(lineNumber=parseInt(match[1],10)),[{line:lineNumber-1,message:e.message,error:e}]}return"object"!=typeof gj||null===gj||void 0===gj?(errors.push({message:"The root of a GeoJSON object must be an object.",line:0}),errors):(root(gj),errors)}var jsonlint=_dereq_("jsonlint-lines");module.exports.hint=hint},{"jsonlint-lines":2}],2:[function(_dereq_,module,exports){(function(process){var jsonlint=function(){function Parser(){this.yy={}}var parser={trace:function(){},yy:{},symbols_:{error:2,JSONString:3,STRING:4,JSONNumber:5,NUMBER:6,JSONNullLiteral:7,NULL:8,JSONBooleanLiteral:9,TRUE:10,FALSE:11,JSONText:12,JSONValue:13,EOF:14,JSONObject:15,JSONArray:16,"{":17,"}":18,JSONMemberList:19,JSONMember:20,":":21,",":22,"[":23,"]":24,JSONElementList:25,$accept:0,$end:1},terminals_:{2:"error",4:"STRING",6:"NUMBER",8:"NULL",10:"TRUE",11:"FALSE",14:"EOF",17:"{",18:"}",21:":",22:",",23:"[",24:"]"},productions_:[0,[3,1],[5,1],[7,1],[9,1],[9,1],[12,2],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[15,2],[15,3],[20,3],[19,1],[19,3],[16,2],[16,3],[25,1],[25,3]],performAction:function(yytext,yyleng,yylineno,yy,yystate,$$,_$){var $0=$$.length-1;switch(yystate){case 1:this.$=yytext.replace(/\\(\\|")/g,"$1").replace(/\\n/g,"\n").replace(/\\r/g,"\r").replace(/\\t/g,"	").replace(/\\v/g,"").replace(/\\f/g,"\f").replace(/\\b/g,"\b");break;case 2:this.$=Number(yytext);break;case 3:this.$=null;break;case 4:this.$=!0;break;case 5:this.$=!1;break;case 6:return this.$=$$[$0-1];case 13:this.$={},Object.defineProperty(this.$,"__line__",{value:this._$.first_line,enumerable:!1});break;case 14:this.$=$$[$0-1],Object.defineProperty(this.$,"__line__",{value:this._$.first_line,enumerable:!1});break;case 15:this.$=[$$[$0-2],$$[$0]];break;case 16:this.$={},this.$[$$[$0][0]]=$$[$0][1];break;case 17:this.$=$$[$0-2],$$[$0-2][$$[$0][0]]=$$[$0][1];break;case 18:this.$=[],Object.defineProperty(this.$,"__line__",{value:this._$.first_line,enumerable:!1});break;case 19:this.$=$$[$0-1],Object.defineProperty(this.$,"__line__",{value:this._$.first_line,enumerable:!1});break;case 20:this.$=[$$[$0]];break;case 21:this.$=$$[$0-2],$$[$0-2].push($$[$0])}},table:[{3:5,4:[1,12],5:6,6:[1,13],7:3,8:[1,9],9:4,10:[1,10],11:[1,11],12:1,13:2,15:7,16:8,17:[1,14],23:[1,15]},{1:[3]},{14:[1,16]},{14:[2,7],18:[2,7],22:[2,7],24:[2,7]},{14:[2,8],18:[2,8],22:[2,8],24:[2,8]},{14:[2,9],18:[2,9],22:[2,9],24:[2,9]},{14:[2,10],18:[2,10],22:[2,10],24:[2,10]},{14:[2,11],18:[2,11],22:[2,11],24:[2,11]},{14:[2,12],18:[2,12],22:[2,12],24:[2,12]},{14:[2,3],18:[2,3],22:[2,3],24:[2,3]},{14:[2,4],18:[2,4],22:[2,4],24:[2,4]},{14:[2,5],18:[2,5],22:[2,5],24:[2,5]},{14:[2,1],18:[2,1],21:[2,1],22:[2,1],24:[2,1]},{14:[2,2],18:[2,2],22:[2,2],24:[2,2]},{3:20,4:[1,12],18:[1,17],19:18,20:19},{3:5,4:[1,12],5:6,6:[1,13],7:3,8:[1,9],9:4,10:[1,10],11:[1,11],13:23,15:7,16:8,17:[1,14],23:[1,15],24:[1,21],25:22},{1:[2,6]},{14:[2,13],18:[2,13],22:[2,13],24:[2,13]},{18:[1,24],22:[1,25]},{18:[2,16],22:[2,16]},{21:[1,26]},{14:[2,18],18:[2,18],22:[2,18],24:[2,18]},{22:[1,28],24:[1,27]},{22:[2,20],24:[2,20]},{14:[2,14],18:[2,14],22:[2,14],24:[2,14]},{3:20,4:[1,12],20:29},{3:5,4:[1,12],5:6,6:[1,13],7:3,8:[1,9],9:4,10:[1,10],11:[1,11],13:30,15:7,16:8,17:[1,14],23:[1,15]},{14:[2,19],18:[2,19],22:[2,19],24:[2,19]},{3:5,4:[1,12],5:6,6:[1,13],7:3,8:[1,9],9:4,10:[1,10],11:[1,11],13:31,15:7,16:8,17:[1,14],23:[1,15]},{18:[2,17],22:[2,17]},{18:[2,15],22:[2,15]},{22:[2,21],24:[2,21]}],defaultActions:{16:[2,6]},parseError:function(str,hash){if(!hash.recoverable)throw new Error(str);this.trace(str)},parse:function(input){function lex(){var token;return token=self.lexer.lex()||EOF,"number"!=typeof token&&(token=self.symbols_[token]||token),token}var self=this,stack=[0],vstack=[null],lstack=[],table=this.table,yytext="",yylineno=0,yyleng=0,recovering=0,TERROR=2,EOF=1;this.lexer.setInput(input),this.lexer.yy=this.yy,this.yy.lexer=this.lexer,this.yy.parser=this,"undefined"==typeof this.lexer.yylloc&&(this.lexer.yylloc={});var yyloc=this.lexer.yylloc;lstack.push(yyloc);var ranges=this.lexer.options&&this.lexer.options.ranges;this.parseError="function"==typeof this.yy.parseError?this.yy.parseError:Object.getPrototypeOf(this).parseError;for(var symbol,preErrorSymbol,state,action,r,p,len,newState,expected,yyval={};;){if(state=stack[stack.length-1],this.defaultActions[state]?action=this.defaultActions[state]:((null===symbol||"undefined"==typeof symbol)&&(symbol=lex()),action=table[state]&&table[state][symbol]),"undefined"==typeof action||!action.length||!action[0]){var errStr="";expected=[];for(p in table[state])this.terminals_[p]&&p>TERROR&&expected.push("'"+this.terminals_[p]+"'");errStr=this.lexer.showPosition?"Parse error on line "+(yylineno+1)+":\n"+this.lexer.showPosition()+"\nExpecting "+expected.join(", ")+", got '"+(this.terminals_[symbol]||symbol)+"'":"Parse error on line "+(yylineno+1)+": Unexpected "+(symbol==EOF?"end of input":"'"+(this.terminals_[symbol]||symbol)+"'"),this.parseError(errStr,{text:this.lexer.match,token:this.terminals_[symbol]||symbol,line:this.lexer.yylineno,loc:yyloc,expected:expected})}if(action[0]instanceof Array&&action.length>1)throw new Error("Parse Error: multiple actions possible at state: "+state+", token: "+symbol);switch(action[0]){case 1:stack.push(symbol),vstack.push(this.lexer.yytext),lstack.push(this.lexer.yylloc),stack.push(action[1]),symbol=null,preErrorSymbol?(symbol=preErrorSymbol,preErrorSymbol=null):(yyleng=this.lexer.yyleng,yytext=this.lexer.yytext,yylineno=this.lexer.yylineno,yyloc=this.lexer.yylloc,recovering>0&&recovering--);break;case 2:if(len=this.productions_[action[1]][1],yyval.$=vstack[vstack.length-len],yyval._$={first_line:lstack[lstack.length-(len||1)].first_line,last_line:lstack[lstack.length-1].last_line,first_column:lstack[lstack.length-(len||1)].first_column,last_column:lstack[lstack.length-1].last_column},ranges&&(yyval._$.range=[lstack[lstack.length-(len||1)].range[0],lstack[lstack.length-1].range[1]]),r=this.performAction.call(yyval,yytext,yyleng,yylineno,this.yy,action[1],vstack,lstack),"undefined"!=typeof r)return r;len&&(stack=stack.slice(0,-1*len*2),vstack=vstack.slice(0,-1*len),lstack=lstack.slice(0,-1*len)),stack.push(this.productions_[action[1]][0]),vstack.push(yyval.$),lstack.push(yyval._$),newState=table[stack[stack.length-2]][stack[stack.length-1]],stack.push(newState);break;case 3:return!0}}return!0}},lexer=function(){var lexer={EOF:1,parseError:function(str,hash){if(!this.yy.parser)throw new Error(str);this.yy.parser.parseError(str,hash)},setInput:function(input){return this._input=input,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var ch=this._input[0];this.yytext+=ch,this.yyleng++,this.offset++,this.match+=ch,this.matched+=ch;var lines=ch.match(/(?:\r\n?|\n).*/g);return lines?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),ch},unput:function(ch){var len=ch.length,lines=ch.split(/(?:\r\n?|\n)/g);this._input=ch+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-len-1),this.offset-=len;var oldLines=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),lines.length-1&&(this.yylineno-=lines.length-1);var r=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:lines?(lines.length===oldLines.length?this.yylloc.first_column:0)+oldLines[oldLines.length-lines.length].length-lines[0].length:this.yylloc.first_column-len},this.options.ranges&&(this.yylloc.range=[r[0],r[0]+this.yyleng-len]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(n){this.unput(this.match.slice(n))},pastInput:function(){var past=this.matched.substr(0,this.matched.length-this.match.length);return(past.length>20?"...":"")+past.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var next=this.match;return next.length<20&&(next+=this._input.substr(0,20-next.length)),(next.substr(0,20)+(next.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var pre=this.pastInput(),c=new Array(pre.length+1).join("-");return pre+this.upcomingInput()+"\n"+c+"^"},test_match:function(match,indexed_rule){var token,lines,backup;if(this.options.backtrack_lexer&&(backup={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(backup.yylloc.range=this.yylloc.range.slice(0))),lines=match[0].match(/(?:\r\n?|\n).*/g),lines&&(this.yylineno+=lines.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:lines?lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+match[0].length},this.yytext+=match[0],this.match+=match[0],this.matches=match,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(match[0].length),this.matched+=match[0],token=this.performAction.call(this,this.yy,this,indexed_rule,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),token)return token;if(this._backtrack){for(var k in backup)this[k]=backup[k];return!1}return!1},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var token,match,tempMatch,index;this._more||(this.yytext="",this.match="");for(var rules=this._currentRules(),i=0;i<rules.length;i++)if(tempMatch=this._input.match(this.rules[rules[i]]),tempMatch&&(!match||tempMatch[0].length>match[0].length)){if(match=tempMatch,index=i,this.options.backtrack_lexer){if(token=this.test_match(tempMatch,rules[i]),token!==!1)return token;if(this._backtrack){match=!1;continue}return!1}if(!this.options.flex)break}return match?(token=this.test_match(match,rules[index]),token!==!1?token:!1):""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var r=this.next();return r?r:this.lex()},begin:function(condition){this.conditionStack.push(condition)},popState:function(){var n=this.conditionStack.length-1;return n>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(n){return n=this.conditionStack.length-1-Math.abs(n||0),n>=0?this.conditionStack[n]:"INITIAL"},pushState:function(condition){this.begin(condition)},stateStackSize:function(){return this.conditionStack.length},options:{},performAction:function(yy,yy_,$avoiding_name_collisions,YY_START){switch($avoiding_name_collisions){case 0:break;case 1:return 6;case 2:return yy_.yytext=yy_.yytext.substr(1,yy_.yyleng-2),4;case 3:return 17;case 4:return 18;case 5:return 23;case 6:return 24;case 7:return 22;case 8:return 21;case 9:return 10;case 10:return 11;case 11:return 8;case 12:return 14;case 13:return"INVALID"}},rules:[/^(?:\s+)/,/^(?:(-?([0-9]|[1-9][0-9]+))(\.[0-9]+)?([eE][-+]?[0-9]+)?\b)/,/^(?:"(?:\\[\\"bfnrt/]|\\u[a-fA-F0-9]{4}|[^\\\0-\x09\x0a-\x1f"])*")/,/^(?:\{)/,/^(?:\})/,/^(?:\[)/,/^(?:\])/,/^(?:,)/,/^(?::)/,/^(?:true\b)/,/^(?:false\b)/,/^(?:null\b)/,/^(?:$)/,/^(?:.)/],conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13],inclusive:!0}}};return lexer}();return parser.lexer=lexer,Parser.prototype=parser,parser.Parser=Parser,new Parser}();"undefined"!=typeof _dereq_&&"undefined"!=typeof exports&&(exports.parser=jsonlint,exports.Parser=jsonlint.Parser,exports.parse=function(){return jsonlint.parse.apply(jsonlint,arguments)},exports.main=function(args){args[1]||(console.log("Usage: "+args[0]+" FILE"),process.exit(1));var source=_dereq_("fs").readFileSync(_dereq_("path").normalize(args[1]),"utf8");return exports.parser.parse(source)},"undefined"!=typeof module&&_dereq_.main===module&&exports.main(process.argv.slice(1)))}).call(this,_dereq_("UPikzY"))},{UPikzY:5,fs:3,path:4}],3:[function(_dereq_,module,exports){},{}],4:[function(_dereq_,module,exports){(function(process){function normalizeArray(parts,allowAboveRoot){for(var up=0,i=parts.length-1;i>=0;i--){var last=parts[i];"."===last?parts.splice(i,1):".."===last?(parts.splice(i,1),up++):up&&(parts.splice(i,1),up--)}if(allowAboveRoot)for(;up--;up)parts.unshift("..");return parts}function filter(xs,f){if(xs.filter)return xs.filter(f);for(var res=[],i=0;i<xs.length;i++)f(xs[i],i,xs)&&res.push(xs[i]);return res}var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,splitPath=function(filename){return splitPathRe.exec(filename).slice(1)};exports.resolve=function(){for(var resolvedPath="",resolvedAbsolute=!1,i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:process.cwd();if("string"!=typeof path)throw new TypeError("Arguments to path.resolve must be strings");path&&(resolvedPath=path+"/"+resolvedPath,resolvedAbsolute="/"===path.charAt(0))}return resolvedPath=normalizeArray(filter(resolvedPath.split("/"),function(p){return!!p}),!resolvedAbsolute).join("/"),(resolvedAbsolute?"/":"")+resolvedPath||"."},exports.normalize=function(path){var isAbsolute=exports.isAbsolute(path),trailingSlash="/"===substr(path,-1);return path=normalizeArray(filter(path.split("/"),function(p){return!!p}),!isAbsolute).join("/"),path||isAbsolute||(path="."),path&&trailingSlash&&(path+="/"),(isAbsolute?"/":"")+path},exports.isAbsolute=function(path){return"/"===path.charAt(0)},exports.join=function(){var paths=Array.prototype.slice.call(arguments,0);return exports.normalize(filter(paths,function(p,index){if("string"!=typeof p)throw new TypeError("Arguments to path.join must be strings");return p}).join("/"))},exports.relative=function(from,to){function trim(arr){for(var start=0;start<arr.length&&""===arr[start];start++);for(var end=arr.length-1;end>=0&&""===arr[end];end--);return start>end?[]:arr.slice(start,end-start+1)}from=exports.resolve(from).substr(1),to=exports.resolve(to).substr(1);for(var fromParts=trim(from.split("/")),toParts=trim(to.split("/")),length=Math.min(fromParts.length,toParts.length),samePartsLength=length,i=0;length>i;i++)if(fromParts[i]!==toParts[i]){samePartsLength=i;break}for(var outputParts=[],i=samePartsLength;i<fromParts.length;i++)outputParts.push("..");return outputParts=outputParts.concat(toParts.slice(samePartsLength)),outputParts.join("/")},exports.sep="/",exports.delimiter=":",exports.dirname=function(path){var result=splitPath(path),root=result[0],dir=result[1];return root||dir?(dir&&(dir=dir.substr(0,dir.length-1)),root+dir):"."},exports.basename=function(path,ext){var f=splitPath(path)[2];return ext&&f.substr(-1*ext.length)===ext&&(f=f.substr(0,f.length-ext.length)),f},exports.extname=function(path){return splitPath(path)[3]};var substr="b"==="ab".substr(-1)?function(str,start,len){return str.substr(start,len)}:function(str,start,len){return 0>start&&(start=str.length+start),str.substr(start,len)}}).call(this,_dereq_("UPikzY"))},{UPikzY:5}],5:[function(_dereq_,module,exports){function noop(){}var process=module.exports={};process.nextTick=function(){var canSetImmediate="undefined"!=typeof window&&window.setImmediate,canPost="undefined"!=typeof window&&window.postMessage&&window.addEventListener;if(canSetImmediate)return function(f){return window.setImmediate(f)};if(canPost){var queue=[];return window.addEventListener("message",function(ev){var source=ev.source;if((source===window||null===source)&&"process-tick"===ev.data&&(ev.stopPropagation(),queue.length>0)){var fn=queue.shift();fn()}},!0),function(fn){queue.push(fn),window.postMessage("process-tick","*")}}return function(fn){setTimeout(fn,0)}}(),process.title="browser",process.browser=!0,process.env={},process.argv=[],process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.binding=function(name){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(dir){throw new Error("process.chdir is not supported")}},{}]},{},[1])(1)}),function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define([],f);else{var g;g="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,g.tokml=f()}}(function(){return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){function feature(options){return function(_){var styleDefinition="",styleReference="";if(options.simplestyle&&hasStyle(_.properties)&&(styleDefinition=iconstyle(_.properties),styleReference=tag("styleUrl","#"+iconHash(_.properties))),!_.properties||!geometry.valid(_.geometry))return"";var geometryString=geometry.any(_.geometry);return geometryString?styleDefinition+tag("Placemark",name(_.properties,options)+description(_.properties,options)+extendeddata(_.properties)+timestamp(_.properties,options)+geometryString+styleReference):""}}function root(_,options){if(!_.type)return"";switch(_.type){case"FeatureCollection":return _.features?_.features.map(feature(options)).join(""):"";case"Feature":return feature(options)(_);default:return feature(options)({type:"Feature",geometry:_,properties:{}})}}function documentName(options){return void 0!==options.documentName?tag("name",options.documentName):""}function documentDescription(options){return void 0!==options.documentDescription?tag("description",options.documentDescription):""}function name(_,options){return _[options.name]?tag("name",encode(_[options.name])):""}function description(_,options){return _[options.description]?tag("description",encode(_[options.description])):""}function timestamp(_,options){return _[options.timestamp]?tag("TimeStamp",tag("when",encode(_[options.timestamp]))):""}function linearring(_){return _.map(function(cds){return cds.join(",")}).join(" ")}function extendeddata(_){return tag("ExtendedData",pairs(_).map(data).join(""))}function data(_){return tag("Data",tag("value",encode(_[1])),[["name",encode(_[0])]])}function iconstyle(_){return tag("Style",tag("IconStyle",tag("Icon",tag("href",iconUrl(_))))+iconSize(_),[["id",iconHash(_)]])}function iconUrl(_){var size=_["marker-size"]||"medium",symbol=_["marker-symbol"]?"-"+_["marker-symbol"]:"",color=(_["marker-color"]||"7e7e7e").replace("#","");return"https://api.tiles.mapbox.com/v3/marker/pin-"+size.charAt(0)+symbol+"+"+color+".png"}function iconSize(_){return tag("hotSpot","",[["xunits","fraction"],["yunits","fraction"],["x",.5],["y",.5]])}function hasStyle(_){return!!(_["marker-size"]||_["marker-symbol"]||_["marker-color"])}function iconHash(_){return(_["marker-symbol"]||"")+(_["marker-color"]||"").replace("#","")+(_["marker-size"]||"")}function pairs(_){var o=[];for(var i in _)o.push([i,_[i]]);return o}var strxml=require("strxml"),tag=strxml.tag,encode=strxml.encode;module.exports=function(geojson,options){return options=options||{documentName:void 0,documentDescription:void 0,name:"name",description:"description",simplestyle:!1,timestamp:"timestamp"},'<?xml version="1.0" encoding="UTF-8"?>'+tag("kml",tag("Document",documentName(options)+documentDescription(options)+root(geojson,options)),[["xmlns","http://www.opengis.net/kml/2.2"]])};var geometry={Point:function(_){return tag("Point",tag("coordinates",_.coordinates.join(",")))},LineString:function(_){return tag("LineString",tag("coordinates",linearring(_.coordinates)))},Polygon:function(_){if(!_.coordinates.length)return"";var outer=_.coordinates[0],inner=_.coordinates.slice(1),outerRing=tag("outerBoundaryIs",tag("LinearRing",tag("coordinates",linearring(outer)))),innerRings=inner.map(function(i){return tag("innerBoundaryIs",tag("LinearRing",tag("coordinates",linearring(i))))}).join("");return tag("Polygon",outerRing+innerRings)},MultiPoint:function(_){return _.coordinates.length?tag("MultiGeometry",_.coordinates.map(function(c){return geometry.Point({coordinates:c})}).join("")):""},MultiPolygon:function(_){return _.coordinates.length?tag("MultiGeometry",_.coordinates.map(function(c){return geometry.Polygon({coordinates:c})}).join("")):""},MultiLineString:function(_){return _.coordinates.length?tag("MultiGeometry",_.coordinates.map(function(c){return geometry.LineString({coordinates:c})}).join("")):""},GeometryCollection:function(_){return tag("MultiGeometry",_.geometries.map(geometry.any).join(""))},valid:function(_){return _&&_.type&&(_.coordinates||"GeometryCollection"===_.type&&_.geometries.every(geometry.valid))},any:function(_){return geometry[_.type]?geometry[_.type](_):""}}},{strxml:2}],2:[function(require,module,exports){function attr(_){return _&&_.length?" "+_.map(function(a){return a[0]+'="'+a[1]+'"'}).join(" "):""}function tagClose(el,attributes){return"<"+el+attr(attributes)+"/>"}function tag(el,contents,attributes){return"<"+el+attr(attributes)+">"+contents+"</"+el+">"}function encode(_){return(null===_?"":_.toString()).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;")}module.exports.attr=attr,module.exports.tagClose=tagClose,module.exports.tag=tag,module.exports.encode=encode},{}]},{},[1])(1)}),angular.module("farmbuild.farmdata",["farmbuild.core"]),window.farmbuild.farmdata={},angular.injector(["ng","farmbuild.farmdata"]),angular.module("farmbuild.farmdata").factory("farmdataConverter",function(validations,$log,$filter,farmdataValidator){function convertToGeoJsonGeometry(geometry,crs){return geometry.crs={type:"name",properties:{name:crs}},geometry}function convertToFarmDataGeometry(geometry){return geometry.crs=geometry.crs.properties.name,geometry}function createFeature(geoJsonGeometry,name,id,type,comment,area,group){var properties;return properties=_isDefined(type)||_isDefined(comment)||_isDefined(area)||_isDefined(group)?{name:name,_id:id,type:type,comment:comment,area:area,group:group}:{name:name,_id:id},{type:"Feature",geometry:angular.copy(geoJsonGeometry),properties:properties}}function toGeoJsons(farmData){$log.info("Extracting farm and paddocks geometry from farmData ...");var copied=angular.copy(farmData),farmGeometry=copied.geometry,paddocks=[];return copied.paddocks.forEach(function(paddock){paddocks.push(createFeature(convertToGeoJsonGeometry(paddock.geometry,farmGeometry.crs),paddock.name,paddock._id,paddock.type,paddock.comment,paddock.area,paddock.group))}),{farm:{type:"FeatureCollection",features:[createFeature(convertToGeoJsonGeometry(farmGeometry,farmGeometry.crs),copied.name)]},paddocks:{type:"FeatureCollection",features:paddocks}}}function toGeoJson(farmData){$log.info("Extracting farm and paddocks geometry from farmData ...");var copied=angular.copy(farmData);if(!farmdataValidator.validate(copied))return void 0;var farmGeometry=copied.geometry,features=[];return features.push(createFeature(convertToGeoJsonGeometry(farmGeometry,farmGeometry.crs),copied.name,copied.id)),copied.paddocks.forEach(function(paddock){features.push(createFeature(convertToGeoJsonGeometry(paddock.geometry,farmGeometry.crs),paddock.name,paddock._id,paddock.type,paddock.comment,paddock.area,paddock.group))}),{type:"FeatureCollection",features:features}}function exportGeoJson(document,farmData){var a=document.createElement("a"),name="farmdata-"+farmData.name.replace(/\W+/g,"")+"-"+$filter("date")(new Date,"yyyyMMddHHmmss")+".json";a.id="downloadFarmData123456",document.body.appendChild(a),angular.element(a).attr({download:name,href:"data:application/json;charset=utf8,"+encodeURIComponent(JSON.stringify(toGeoJson(farmData),void 0,2))}),a.click()}function toKml(farmData){$log.info("Extracting farm and paddocks geometry from farmData ...");var copied=angular.copy(farmData);if(!farmdataValidator.validate(copied))return void 0;var farmGeometry=copied.geometry,features=[];return features.push(createFeature(convertToGeoJsonGeometry(farmGeometry,farmGeometry.crs),copied.name,copied.id)),copied.paddocks.forEach(function(paddock){features.push(createFeature(convertToGeoJsonGeometry(paddock.geometry,farmGeometry.crs),paddock.name,paddock._id,paddock.type,paddock.comment,paddock.area,paddock.group))}),tokml(JSON.parse(JSON.stringify({type:"FeatureCollection",features:features})))}function exportKml(document,farmData){var a=document.createElement("a"),name="farmdata-"+farmData.name.replace(/\W+/g,"")+"-"+$filter("date")(new Date,"yyyyMMddHHmmss")+".kml";a.id="downloadFarmData123456",document.body.appendChild(a),angular.element(a).attr({download:name,href:"data:application/vnd.google-earth.kml+xml;charset=utf8,"+toKml(farmData)}),a.click()}function toFarmData(farmData,geoJsons){$log.info("Converting geoJsons.farm.features[0] and paddocks geojson to farmData ...");var farmFeature=geoJsons.farm.features[0];return farmData.geometry=convertToFarmDataGeometry(farmFeature.geometry),farmData=farmdataPaddocks.merge(farmData,geoJsons);

}var _isDefined=validations.isDefined,farmdataConverter={};return farmdataConverter.convertToFarmDataGeometry=convertToFarmDataGeometry,farmdataConverter.createFeature=createFeature,farmdataConverter.toGeoJsons=toGeoJsons,farmdataConverter.toGeoJson=toGeoJson,farmdataConverter.exportGeoJson=exportGeoJson,farmdataConverter.toKml=toKml,farmdataConverter.exportKml=exportKml,farmdataConverter.toFarmData=toFarmData,farmdataConverter}),angular.module("farmbuild.farmdata").factory("farmdata",function($log,farmdataSession,farmdataValidator,farmdataPaddocks,crsSupported,validations){var farmdata={session:farmdataSession,validator:farmdataValidator,crsSupported:crsSupported},isEmpty=validations.isEmpty,defaults={id:""+(new Date).getTime(),name:"My new farm",geometry:{type:"Polygon",crs:crsSupported[0].name,coordinates:[]}},geometry=function(projectionName){var g=angular.copy(defaults.geometry);return g.crs=isEmpty(projectionName)?g.crs:projectionName,g},create=function(name,id,projectionName){return{version:1,dateCreated:new Date,dateLastUpdated:new Date,id:isEmpty(id)?defaults.id:id,name:isEmpty(name)?defaults.name:name,geometry:geometry(projectionName),paddocks:[],area:0,areaUnit:"hectare"}};return farmdata.defaultValues=function(){return angular.copy(defaults)},farmdata.isFarmData=function(farmData){return farmdataValidator.validate(farmData)},farmdata.validate=function(farmData){return farmdataValidator.validate(farmData)},farmdata.create=create,farmdata.load=farmdataSession.load,farmdata.find=farmdataSession.find,farmdata.save=function(farmData){return farmdataSession.save(farmData).find()},farmdata.update=function(farmData){return farmdataSession.update(farmData).find()},farmdata.merge=function(farmData,geoJsons){return farmdataSession.merge(farmData,geoJsons).find()},window.farmbuild.farmdata=farmdata,farmdata}),angular.module("farmbuild.farmdata").factory("farmdataPaddocks",function($log,collections,validations,farmdataConverter){function createName(){return"Paddock "+(new Date).getTime()}function generateId(){return(new Date).getTime()}function createPaddockFeature(geoJsonGeometry){return farmdataConverter.createFeature(geoJsonGeometry,createName())}function createPaddock(paddockFeature){var name=paddockFeature.properties.name,id=paddockFeature.properties._id;return name=isDefined(name)?name:createName(),id=isDefined(id)?id:generateId(),{name:name,_id:id,comment:paddockFeature.properties.comment,type:paddockFeature.properties.type,area:paddockFeature.properties.area,group:paddockFeature.properties.group,geometry:farmdataConverter.convertToFarmDataGeometry(paddockFeature.geometry),dateLastUpdated:new Date}}function findPaddock(paddock,paddocks){var found;if(paddock.properties._id)return paddocks.forEach(function(p){paddock.properties._id===p._id&&(found=p)}),found}function updatePaddock(paddockFeature,paddocksExisting){var toUpdate=angular.copy(findPaddock(paddockFeature,paddocksExisting));return toUpdate.name=paddockFeature.properties.name,toUpdate.comment=paddockFeature.properties.comment,toUpdate.type=paddockFeature.properties.type,toUpdate.area=paddockFeature.properties.area,toUpdate.group=paddockFeature.properties.group,toUpdate.geometry=paddockFeature.geometry,toUpdate.dateLastUpdated=new Date,toUpdate}function isNew(paddockFeature){return!isDefined(paddockFeature.properties._id)}function merge(paddockFeature,paddocksExisting){return isNew(paddockFeature)?createPaddock(paddockFeature):updatePaddock(paddockFeature,paddocksExisting)}var farmdataPaddocks={},isDefined=(validations.isEmpty,validations.isDefined);return farmdataPaddocks.createPaddockFeature=createPaddockFeature,farmdataPaddocks.createPaddock=createPaddock,farmdataPaddocks.findPaddock=findPaddock,farmdataPaddocks.updatePaddock=updatePaddock,farmdataPaddocks.merge=function(farmData,geoJsons){var paddockFeatures=geoJsons.paddocks,paddocksExisting=farmData.paddocks,paddocksMerged=[];return paddockFeatures.features.forEach(function(paddockFeature,i){paddocksMerged.push(merge(paddockFeature,paddocksExisting))}),farmData.paddocks=paddocksMerged,farmData},farmdataPaddocks}),angular.module("farmbuild.farmdata").factory("farmdataPaddockValidator",function(validations,$log){function _validate(paddock){return $log.info("validating paddock...",paddock),_isDefined(paddock)&&_isDefined(paddock.name)&&_isDefined(paddock.geometry)?!0:($log.error("invalid, must have type (must pass type validate), weight (positive number) and isDry (boolean): %j",paddock),!1)}var farmdataPaddockValidator={},_isDefined=validations.isDefined,_isArray=validations.isArray,_isEmpty=(validations.isPositiveNumber,validations.isEmpty);return farmdataPaddockValidator.validate=_validate,farmdataPaddockValidator.validateAll=function(items){if(!_isArray(items)||_isEmpty(items))return!1;var i=0;for(i;i<items.length;i++){var item=items[i];if(!_validate(item))return $log.error("validator invalid at %s: %j",i,item),!1}return!0},farmdataPaddockValidator}),angular.module("farmbuild.farmdata").constant("crsSupported",[{label:"GDA 94 Geographics: EPSG:4283",name:"EPSG:4283",projection:"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"},{label:"WGS 84 Geographics: EPSG:4326",name:"EPSG:4326",projection:"+proj=longlat +datum=WGS84 +no_defs"},{label:"Web Mercator: EPSG:3857",name:"EPSG:3857",projection:"+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs"},{label:"VicGrid 94: EPSG:3111",name:"EPSG:3111",projection:"+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs"},{label:"NSW Lamberts: EPSG:3308",name:"EPSG:3308",projection:"+proj=lcc +lat_1=-30.75 +lat_2=-35.75 +lat_0=-33.25 +lon_0=147 +x_0=9300000 +y_0=4500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"},{label:"SA Lamberts: EPSG:3107",name:"EPSG:3107",projection:"+proj=lcc +lat_1=-28 +lat_2=-36 +lat_0=-32 +lon_0=135 +x_0=1000000 +y_0=2000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"},{label:"Australian Albers: EPSG:3577",name:"EPSG:3577",projection:"+proj=aea +lat_1=-18 +lat_2=-36 +lat_0=0 +lon_0=132 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"}]),angular.module("farmbuild.farmdata").factory("farmdataSession",function($log,$filter,farmdataValidator,farmdataConverter,farmdataPaddocks,validations){function merge(farmData,geoJsons){$log.info("Merging geoJsons.farm.features[0] and paddocks geojson to farmData ...");{var farmFeature=geoJsons.farm.features[0];geoJsons.paddocks}farmData.geometry=farmdataConverter.convertToFarmDataGeometry(farmFeature.geometry);var farmDataMerged=farmdataPaddocks.merge(farmData,geoJsons);return farmdataSession.update(farmDataMerged)}{var farmdataSession={};validations.isDefined}return farmdataSession.merge=merge,farmdataSession.clear=function(){return sessionStorage.clear(),farmdataSession},farmdataSession.save=function(farmData){return $log.info("saving farmData"),farmdataValidator.validate(farmData)?(sessionStorage.setItem("farmData",angular.toJson(farmData)),farmdataSession):($log.error("Unable to save farmData... it is invalid"),farmdataSession)},farmdataSession.update=function(farmData){return $log.info("update farmData"),farmData.dateLastUpdated=new Date,farmdataSession.save(farmData),farmdataSession},farmdataSession.find=function(){var json=sessionStorage.getItem("farmData");return null===json?void 0:angular.fromJson(json)},farmdataSession.load=function(farmData){return farmdataValidator.validate(farmData)?farmdataSession.save(farmData).find():void $log.error("Unable to load farmData... it is invalid")},farmdataSession["export"]=function(document,farmData){var a=document.createElement("a"),name="farmdata-"+farmData.name.replace(/\W+/g,"")+"-"+$filter("date")(new Date,"yyyyMMddHHmmss")+".json";a.id="downloadFarmData123456",document.body.appendChild(a),angular.element(a).attr({download:name,href:"data:application/json;charset=utf8,"+encodeURIComponent(JSON.stringify(farmData,void 0,2))}),a.click()},farmdataSession.isLoadFlagSet=function(location){var load=!1;return location.href.split("?").length>1&&0===location.href.split("?")[1].indexOf("load")&&(load=location.href.split("?")[1].split("=")[1].indexOf("true")>-1),load},farmdataSession.setLoadFlag=function(location){var path=farmdataSession.clearLoadFlag(location);return path+"?load=true"},farmdataSession.clearLoadFlag=function(location){var path=location.href.toString(),path=path.substring(0,path.indexOf("?"));return path},farmdataSession}),angular.module("farmbuild.farmdata").factory("geoJsonValidator",function(validations,$log){function isGeoJsons(geoJsons){var errors=geojsonhint.hint("string"==typeof geoJsons?geoJsons:angular.toJson(geoJsons)),isGeoJson=0===errors.length;return isGeoJson||$log.error("isGeoJsons errors: ",errors),isGeoJson}function _validate(farmData){return $log.info("validating farmData...",farmData),_isDefined(farmData)&&_isDefined(farmData.geometry)&&_isDefined(farmData.geometry.crs)&&_isDefined(farmData.paddocks)?!0:($log.error("farmData must have geometry, geometry.crs, paddocks"),!1)}{var geoJsonValidator={geojsonhint:geojsonhint},_isDefined=validations.isDefined;validations.isArray,validations.isPositiveNumber,validations.isEmpty}if(!_isDefined(geojsonhint))throw Error("geojsonhint must be available!");return geoJsonValidator.isGeoJsons=isGeoJsons,geoJsonValidator.validate=_validate,geoJsonValidator}),angular.module("farmbuild.core").factory("farmdataValidator",function(validations,$log,geoJsonValidator){function _validate(farmData){return $log.info("validating farmData..."),_isDefined(farmData)?_isObject(farmData)?farmData.hasOwnProperty("name")&&_isString(farmData.name)&&!_isEmpty(farmData.name)&&_isDefined(farmData.area)&&_isPositiveNumberOrZero(farmData.area)&&angular.equals(farmData.areaUnit,areaUnitDefault)?geoJsonValidator.validate(farmData):($log.error("farmData must have name, area (positve number or zero) and areaUnit (must be "+areaUnitDefault+"): %j",farmData),!1):($log.error("farmData must be a javascript Object."),!1):($log.error("farmData is undefined."),!1)}var farmdataValidator={isGeoJsons:geoJsonValidator.isGeoJsons},_isDefined=validations.isDefined,_isPositiveNumberOrZero=(validations.isArray,validations.isPositiveNumber,validations.isPositiveNumberOrZero),_isEmpty=validations.isEmpty,_isObject=validations.isObject,_isString=validations.isString,areaUnitDefault="hectare";return farmdataValidator.validate=_validate,farmdataValidator});