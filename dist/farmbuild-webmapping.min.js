"use strict";angular.module("farmbuild.webmapping",["farmbuild.core","farmbuild.farmdata"]).factory("webmapping",function(farmdata,validations,$log,geoJsonValidator,farmdataConverter,webMappingSession,webMappingProjections,webMappingInteractions,webMappingMeasurement,webMappingPaddocks,webMappingOpenLayersHelper,webMappingGoogleAddressSearch,webMappingGoogleAnalytics,webMappingParcels){$log.info("Welcome to Web Mapping...");var session=(validations.isDefined,webMappingSession),webMapping={session:session,farmdata:farmdata,validator:geoJsonValidator,toGeoJsons:farmdataConverter.toGeoJsons,actions:webMappingInteractions,paddocks:webMappingPaddocks,olHelper:webMappingOpenLayersHelper,googleAddressSearch:webMappingGoogleAddressSearch,ga:webMappingGoogleAnalytics,parcels:webMappingParcels,load:session.load,find:session.find,save:function(geoJsons){var farmData=session.find();return session.save(farmdataConverter.toFarmData(farmData,geoJsons),geoJsons)},"export":session["export"],create:farmdata.create};return webMapping.version="0.1.0","undefined"==typeof window.farmbuild?window.farmbuild={webmapping:webMapping}:window.farmbuild.webmapping=webMapping,webMapping}),angular.module("farmbuild.webmapping").factory("webMappingGoogleAnalytics",function($log,validations,googleAnalytics){{var webMappingGoogleAnalytics={},api="farmbuild-webmapping";validations.isDefined}return webMappingGoogleAnalytics.trackWebMapping=function(clientName){$log.info("googleAnalyticsWebMapping.trackWebMapping clientName: %s",clientName),googleAnalytics.track(api,clientName)},webMappingGoogleAnalytics}),angular.module("farmbuild.webmapping").factory("webMappingDrawInteraction",function(validations,$log){function _create(map,farmSource,paddocksSource){function _init(clipFn,selectInteraction){$log.info("draw interaction init ..."),map.addInteraction(drawInteraction),drawInteraction.setActive(!1),drawInteraction.on("drawend",function(e){$log.info("draw end ...");var feature=e.feature;clipFn(feature,paddocksSource,farmSource),setTimeout(function(){paddocksSource.removeFeature(feature)},100),drawingStatus=!1}),drawInteraction.on("drawstart",function(event){$log.info("draw start ..."),selectInteraction.interaction.getFeatures().clear(),drawingStatus=!0})}function _enable(){drawInteraction.setActive(!0)}function _disable(){drawInteraction.setActive(!1)}function _finish(){drawInteraction.finishDrawing()}function _isDrawing(){return drawingStatus}function _discard(){drawingStatus=!1,_disable(),_enable()}var drawInteraction=new ol.interaction.Draw({source:paddocksSource,type:"Polygon"}),drawingStatus=!1;return{init:_init,enable:_enable,disable:_disable,interaction:drawInteraction,isDrawing:_isDrawing,finish:_finish,discard:_discard}}validations.isDefined;return{create:_create}}),angular.module("farmbuild.webmapping").factory("webMappingInteractions",function(validations,$log,webMappingSelectInteraction,webMappingModifyInteraction,webMappingDrawInteraction,webMappingSnapInteraction,webMappingMeasureInteraction,webMappingTransformation){function _destroy(map){$log.info("destroying all interactions ..."),_isDefined(_select)&&_isDefined(_modify)&&_isDefined(_snap)&&_isDefined(_draw)&&_isDefined(_measure)&&(map.removeInteraction(_select.interaction),map.removeInteraction(_modify.interaction),map.removeInteraction(_draw.interaction),map.removeInteraction(_snap.interaction),_select=void 0,_modify=void 0,_draw=void 0,_snap=void 0,_activeLayer=void 0,_activeLayerName=void 0,_mode=void 0)}function _init(map,farmLayer,paddocksLayer,activeLayerName,multi){if($log.info("interactions init ..."),_isDefined(activeLayerName)&&_isDefined(map)&&_isDefined(paddocksLayer)&&_isDefined(farmLayer)){if("paddocks"===activeLayerName)_activeLayer=paddocksLayer;else{if("farm"!==activeLayerName)return;_activeLayer=farmLayer}_select=webMappingSelectInteraction.create(map,_activeLayer,multi),_modify=webMappingModifyInteraction.create(map,_select),_draw=webMappingDrawInteraction.create(map,farmLayer.getSource(),paddocksLayer.getSource()),_snap=webMappingSnapInteraction.create(map,farmLayer.getSource(),paddocksLayer.getSource()),_mode="",_activeLayerName=activeLayerName,_select.init(),_modify.init(),_draw.init(_clip,_select),_snap.init()}}function _addFeature(layer,feature,name){_isDefined(feature)&&_isDefined(name)&&($log.info("adding feature ...",feature),feature.setProperties({name:name}),layer.getSource().addFeature(feature),_clearSelections())}function _removeFeatures(features,deselect){_isDefined(deselect)||(deselect=!0),$log.info("removing features ...",features),_isDefined(features)&&features.forEach(function(feature){_activeLayer.getSource().removeFeature(feature)}),deselect&&_clearSelections()}function _clip(featureToClip,paddockSource,farmSource){$log.info("clipping feature ...",featureToClip),"paddocks"!==_activeLayerName||"draw"!==_mode&&"edit"!==_mode||_clipPaddocks(featureToClip,paddockSource,farmSource),"paddocks"===_activeLayerName&&"donut-draw"===_mode&&_clipDonut(featureToClip),"farm"===_activeLayerName&&_clipFarm(featureToClip,farmSource)}function _clipPaddocks(featureToClip,paddockSource,farmSource){if(farmSource.getFeatures()[0].getGeometry().getExtent()[0]!==1/0){var clipped,paddocksFeatures=paddockSource.getFeatures(),farmFeatures=farmSource.getFeatures(),name=featureToClip.getProperties().name||"Paddock "+(new Date).getTime();clipped=_transform.eraseAll(featureToClip,paddocksFeatures),clipped=_transform.intersect(clipped,farmFeatures[0]),_addFeature(_activeLayer,clipped,name)}}function _clipDonut(donutFeature){var clipped,paddockFeature=_activeLayer.getSource().getFeaturesInExtent(donutFeature.getGeometry().getExtent())[0],name=donutFeature.getProperties().name||"Paddock "+(new Date).getTime();clipped=_transform.erase(paddockFeature,donutFeature),_addFeature(_activeLayer,clipped,name),_activeLayer.getSource().removeFeature(paddockFeature)}function _clipFarm(featureToClip,farmSource){var name,clipped=featureToClip;farmSource.getFeatures()[0]&&(name=farmSource.getFeatures()[0].getProperties().name),farmSource.getFeatures()[0].getGeometry().getExtent()[0]!==1/0&&(clipped=_transform.erase(featureToClip,farmSource.getFeatures()[0]),_addFeature(_activeLayer,clipped,name),clipped=_transform.merge(farmSource.getFeatures())),_removeFeatures(farmSource.getFeatures(),!1),_addFeature(_activeLayer,clipped,name),_clearSelections()}function _merge(features){$log.info("merging features ...",features),_removeFeatures(features,!1),_addFeature(_activeLayer,_transform.merge(features)),_clearSelections()}function _selectedFeatures(){return _isDefined(_select)&&_isDefined(_select.interaction)?($log.info("Selected features ...",_select.interaction.getFeatures()),_select.interaction.getFeatures()):void 0}function _enableEditing(){_isDefined(_mode)&&"edit"!==_mode&&($log.info("editing enabled"),_select.enable(),_modify.enable(),_snap.enable(),_draw.disable(),_mode="edit")}function _enableDrawing(){_isDefined(_mode)&&"draw"!==_mode&&($log.info("drawing enabled"),_select.disable(),_modify.disable(),_draw.enable(),_snap.enable(),_mode="draw")}function _enableDonutDrawing(){_isDefined(_mode)&&"donut-draw"!==_mode&&($log.info("donut drawing enabled"),_select.disable(),_modify.disable(),_draw.enable(),_snap.enable(),_mode="donut-draw")}function _measure(map,type){return _isDefined(map)&&_isDefined(type)?(_select.disable(),_modify.disable(),_draw.disable(),_snap.enable(),webMappingMeasureInteraction.create(map,type)):void 0}function _measureLength(map){return _isDefined(map)&&"length"!==_mode?($log.info("length measurement enabled"),_mode="length",_measure(map,"LineString")):void 0}function _measureArea(map){return _isDefined(_mode)&&"area"!==_mode?($log.info("area measurement enabled"),_mode="area",_measure(map,"Polygon")):void 0}function _clearSelections(){_select.interaction.getFeatures().clear()}function _isDrawing(){return _isDefined(_mode)?_draw.isDrawing():void 0}function _finishDrawing(){_isDefined(_mode)&&_draw.finish()}function _discardDrawing(){_isDefined(_mode)&&_draw.discard()}function _isEditing(){return _isDefined(_mode)?_select.interaction.getFeatures().getLength()>0:void 0}var _select,_modify,_draw,_snap,_activeLayer,_activeLayerName,_mode,_isDefined=validations.isDefined,_transform=webMappingTransformation;return{init:_init,destroy:_destroy,enableDrawing:_enableDrawing,enableEditing:_enableEditing,measureLength:_measureLength,measureArea:_measureArea,enableDonutDrawing:_enableDonutDrawing,clip:_clip,merge:_merge,remove:_removeFeatures,selectedFeatures:_selectedFeatures,isDrawing:_isDrawing,isEditing:_isEditing,finishDrawing:_finishDrawing,discardDrawing:_discardDrawing}}),angular.module("farmbuild.webmapping").factory("webMappingMeasureInteraction",function(validations,webMappingMeasurement,$log){function _create(map,type){function onPointerMove(evt){!evt.dragging&&sketch&&(_value="Polygon"===_type?_measurement.area(sketch):_measurement.length(sketch))}function _getValue(){return _value}_type=type;var sketch,source=new ol.source.Vector,drawInteraction=new ol.interaction.Draw({source:source,type:type,style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"rgba(0, 0, 0, 0.5)",lineDash:[10,10],width:2}),image:new ol.style.Circle({radius:5,stroke:new ol.style.Stroke({color:"rgba(0, 0, 0, 0.7)"}),fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"})})})});return drawInteraction.on("drawstart",function(evt){sketch=evt.feature},this),drawInteraction.on("drawend",function(evt){sketch=null},this),map.addInteraction(drawInteraction),drawInteraction.setActive(!0),map.on("pointermove",onPointerMove),{getValue:_getValue,interaction:drawInteraction}}var _value,_type,_measurement=(validations.isDefined,webMappingMeasurement);return{create:_create}}),angular.module("farmbuild.webmapping").factory("webMappingModifyInteraction",function(validations,$log){function _create(map,select){function _init(){$log.info("modify interaction init ..."),map.addInteraction(modifyInteraction),modifyInteraction.setActive(!1)}function _enable(){modifyInteraction.setActive(!0)}function _disable(){modifyInteraction.setActive(!1)}var modifyInteraction=new ol.interaction.Modify({features:select.interaction.getFeatures()});return{init:_init,enable:_enable,disable:_disable,interaction:modifyInteraction}}validations.isDefined;return{create:_create}}),angular.module("farmbuild.webmapping").factory("webMappingSelectInteraction",function(validations,$log){function _create(map,layer,multi){function _init(){$log.info("select interaction init ..."),map.addInteraction(selectInteraction),selectInteraction.setActive(!1)}function _enable(){selectInteraction.setActive(!0)}function _disable(){selectInteraction.setActive(!1)}_isDefined(multi)||(multi=!1);var selectConfig={multi:multi,layers:[layer]};multi?selectConfig.addCondition=ol.events.condition.shiftKeyOnly:(selectConfig.addCondition=ol.events.condition.never,selectConfig.toggleCondition=ol.events.condition.never);var selectInteraction=new ol.interaction.Select(selectConfig);return{init:_init,enable:_enable,disable:_disable,interaction:selectInteraction}}var _isDefined=validations.isDefined;return{create:_create}}),angular.module("farmbuild.webmapping").factory("webMappingSnapInteraction",function(validations,$log){function _create(map,farmSource,paddocksSource){function _enable(){snapInteraction.setActive(!0)}function _disable(){snapInteraction.setActive(!1)}function _init(){$log.info("snap interaction init ..."),map.addInteraction(snapInteraction),snapInteraction.setActive(!1)}var snapInteraction=new ol.interaction.Snap({source:paddocksSource});return snapInteraction.addFeature(farmSource.getFeatures()[0]),{init:_init,enable:_enable,disable:_disable,interaction:snapInteraction}}validations.isDefined;return{create:_create}}),angular.module("farmbuild.webmapping").factory("webMappingMeasurement",function(validations,$log){function _areas(features){return $log.info("calculating area of features ...",features),1e-4*turf.area(features)}function _area(feature){return $log.info("calculating area of polygon ...",feature),1e-4*feature.getGeometry().getArea()}function _length(feature){return $log.info("calculating length of line ...",feature),1e-4*feature.getGeometry().getLength()}validations.isDefined;return{area:_area,areas:_areas,length:_length}}),angular.module("farmbuild.webmapping").factory("webMappingOpenLayersHelper",function(validations,$log){function _transform(latLng,sourceProjection,destinationProjection){if(_isDefined(latLng)&&_isDefined(sourceProjection)&&_isDefined(destinationProjection)){var transformed=ol.proj.transform(latLng,sourceProjection,destinationProjection);return new google.maps.LatLng(transformed[1],transformed[0])}}function _exportGeometry(source,dataProjection,featureProjection){if(_isDefined(source)){var format=new ol.format.GeoJSON;try{var result=format.writeFeaturesObject(source.getFeatures(),{dataProjection:dataProjection,featureProjection:featureProjection});return angular.forEach(result.features,function(feature){feature.geometry.crs={properties:{name:dataProjection}}}),result}catch(e){$log.error(e)}}}function _clear(farmSource,paddocksSource){_isDefined(farmSource)&&_isDefined(paddocksSource)&&($log.info("clearing source ..."),paddocksSource.clear(),farmSource.clear())}function _integrateGMap(gmap,map,dataProjection){if(_isDefined(gmap)&&_isDefined(map)&&_isDefined(dataProjection)){$log.info("integrating google map ...");var view=map.getView(),targetElement=map.getTargetElement(),googleProjection="EPSG:3857";view.on("change:center",function(){var center=ol.proj.transform(view.getCenter(),googleProjection,dataProjection);gmap.setCenter(new google.maps.LatLng(center[1],center[0]))}),view.on("change:resolution",function(){gmap.setZoom(view.getZoom())}),window.onresize=function(){var center=_transform(view.getCenter(),googleProjection,dataProjection);google.maps.event.trigger(gmap,"resize"),gmap.setCenter(center)};var defaults={centerNew:[-36.22488327137526,145.5826132801325],zoomNew:6},extent=map.getLayers().item(1).getSource().getExtent();if($log.info("farm extent: %j",extent),extent[0]===1/0)return gmap.controls[google.maps.ControlPosition.TOP_LEFT].push(targetElement),targetElement.parentNode.removeChild(targetElement),view.setCenter(ol.proj.transform([defaults.centerNew[1],defaults.centerNew[0]],dataProjection,googleProjection)),void view.setZoom(defaults.zoomNew);gmap.controls[google.maps.ControlPosition.TOP_LEFT].push(targetElement),targetElement.parentNode.removeChild(targetElement),view.fitExtent(extent,map.getSize())}}function _center(coordinates,map){_isDefined(coordinates)&&_isDefined(map)&&($log.info("centring view ..."),map.getView().setCenter(coordinates),map.getView().setZoom(15))}function _paddocksLayer(paddocksGeometry,dataProjection,featureProjection){if(_isDefined(paddocksGeometry)&&_isDefined(dataProjection)&&_isDefined(featureProjection)){$log.info("creating paddocks vector layer ...",dataProjection,featureProjection);var paddocksSource=new ol.source.Vector({features:(new ol.format.GeoJSON).readFeatures(paddocksGeometry,{dataProjection:dataProjection,featureProjection:featureProjection})});return new ol.layer.Vector({source:paddocksSource,style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.3)"}),stroke:new ol.style.Stroke({color:"#319FD3",width:1})})})}}function _farmLayer(farmGeometry,dataProjection,featureProjection){if(_isDefined(farmGeometry)&&_isDefined(dataProjection)&&_isDefined(featureProjection)){$log.info("creating farm vector layer ...",dataProjection,featureProjection);var farmSource=new ol.source.Vector({features:(new ol.format.GeoJSON).readFeatures(farmGeometry,{dataProjection:dataProjection,featureProjection:featureProjection})});return new ol.layer.Vector({source:farmSource,style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0)"}),stroke:new ol.style.Stroke({color:"#ff6600",width:3})})})}}function _reload(map,geoJson,dataProjectionCode,featureProjectionCode){var layers=map.getLayers();layers.clear(),map.addLayer(_paddocksLayer(geoJson.paddocks,dataProjectionCode,featureProjectionCode)),map.addLayer(_farmLayer(geoJson.farm,dataProjectionCode,featureProjectionCode))}function _openLayerFeatureToGeoJson(olFeature){return _isDefined(olFeature)?($log.info("Converting openlayer feature to geoJson ...",olFeature),_geoJSONFormat.writeFeatureObject(olFeature)):void 0}function _openLayerFeaturesToGeoJson(olFeatures){return _isDefined(olFeatures)?($log.info("Converting openlayer feature to geoJson ...",olFeatures),_geoJSONFormat.writeFeaturesObject(olFeatures)):void 0}function _geoJsonToOpenLayerFeature(feature,dataProjection,featureProjection){return _isDefined(feature)?($log.info("Converting geoJson feature to openlayer feature ...",feature),_geoJSONFormat.readFeature(feature,dataProjection,featureProjection)):void 0}function _geoJsonToOpenLayerFeatures(features,dataProjection,featureProjection){return _isDefined(features)?($log.info("Converting geoJson feature to openlayer features ...",features),_geoJSONFormat.readFeatures(features,dataProjection,featureProjection)):void 0}var _isDefined=validations.isDefined,_geoJSONFormat=new ol.format.GeoJSON;return{exportGeometry:_exportGeometry,clear:_clear,center:_center,integrateGMap:_integrateGMap,paddocksLayer:_paddocksLayer,farmLayer:_farmLayer,reload:_reload,featureToGeoJson:_openLayerFeatureToGeoJson,featuresToGeoJson:_openLayerFeaturesToGeoJson,geoJsonToFeature:_geoJsonToOpenLayerFeature,geoJsonToFeatures:_geoJsonToOpenLayerFeatures}}),angular.module("farmbuild.webmapping").factory("webMappingPaddocks",function($log,validations){function _findByCoordinate(coordinate,vectorLayer){var found;if(_isDefined(coordinate)&&_isDefined(vectorLayer)){var paddocks=vectorLayer.getSource().getFeaturesAtCoordinate(coordinate);return paddocks&&paddocks.length>0&&(found=vectorLayer.getSource().getFeaturesAtCoordinate(coordinate)[0]),$log.info("looking up for a paddock at ",coordinate,found),found}}var _isDefined=validations.isDefined;return{findByCoordinate:_findByCoordinate}});var loadFeatures=function(data){console.log(data)};angular.module("farmbuild.webmapping").factory("webMappingParcels",function($log,$http,validations){function _load(serviceUrl,extent,dataProjection,resultProjection){var config={params:{service:"WFS",version:"1.0.0",request:"GetFeature",typeName:"farmbuild:parcels",maxFeatures:50,outputFormat:"text/javascript",format_options:"callback:loadFeatures",srsname:resultProjection,bbox:extent.join(",")+","+dataProjection}};if(_isDefined(serviceUrl)&&_isDefined(extent)&&_isDefined(dataProjection)&&_isDefined(resultProjection))return $log.info("Loading parcels information for the extent: ",extent),$http({method:"JSONP",url:serviceUrl,params:config.params}).success(function(data,status){$log.info("loaded parcels successfully.",status,data)}).error(function(data,status){$log.error("loading parcels failed!!",status,data)})}var _isDefined=validations.isDefined;return{load:_load}}),angular.module("farmbuild.webmapping").factory("webMappingProjections",function($log,farmdata){var webMappingProjections={supported:farmbuild.farmdata.crsSupported};return farmdata.crsSupported.forEach(function(crs){proj4.defs(crs.name,crs.projection)}),webMappingProjections}),angular.module("farmbuild.webmapping").factory("webMappingSession",function($log,farmdata,validations,webMappingMeasurement){function load(farmData){var loaded=farmdata.load(farmData);return _isDefined(loaded)?farmData:void 0}function save(farmData,geoJsons){return _isDefined(farmData)?(farmData.area=webMappingMeasurement.areas(geoJsons.farm),farmData.name=geoJsons.farm.features[0].properties.name,farmdata.update(farmData)):void $log.error("Unable to save the undefined farmData!")}var webMappingSession={},_isDefined=validations.isDefined;return webMappingSession.load=load,webMappingSession.save=save,webMappingSession.clear=farmdata.session.clear,webMappingSession.isLoadFlagSet=farmdata.session.isLoadFlagSet,webMappingSession.find=function(){return farmdata.session.find()},webMappingSession["export"]=function(document,farmData,geoJsons){return farmdata.session["export"](document,save(farmData,geoJsons))},webMappingSession}),angular.module("farmbuild.webmapping").factory("webMappingTransformation",function(validations,webMappingOpenLayersHelper,$log){function _eraseAll(clipee,clippers){if(_isDefined(clipee)&&_isDefined(clippers)){$log.info("erasing feature",clipee);var clipeeGeoJson=olHelper.featureToGeoJson(clipee);return clippers.forEach(function(clipper){var clipperGeoJson=olHelper.featureToGeoJson(clipper);try{clipeeGeoJson=turf.erase(clipeeGeoJson,clipperGeoJson)}catch(e){$log.error(e)}}),olHelper.geoJsonToFeature(clipeeGeoJson)}}function _erase(clipee,clipper){if(_isDefined(clipee)&&_isDefined(clipper)){$log.info("erasing feature 2 from 1",clipee,clipper);var clipped,clipeeGeoJson=olHelper.featureToGeoJson(clipee),cliperGeoJson=olHelper.featureToGeoJson(clipper);try{return clipped=turf.erase(clipeeGeoJson,cliperGeoJson),olHelper.geoJsonToFeature(clipped)}catch(e){$log.error(e)}}}function _intersect(olFeature1,olFeature2){$log.info("intersecting feature",olFeature1,olFeature2);var intersection,feature1=olHelper.featureToGeoJson(olFeature1),feature2=olHelper.featureToGeoJson(olFeature2);try{return intersection=turf.intersect(feature1,feature2),olHelper.geoJsonToFeature(intersection)}catch(e){$log.error(e)}}function _merge(olFeatures){$log.info("merging features ...",olFeatures);var properties,toMerge;toMerge=olHelper.featuresToGeoJson(olFeatures),properties={name:"merged "+(new Date).getTime()};try{return olHelper.geoJsonToFeature(turf.merge(toMerge),properties)}catch(e){$log.error(e)}}var _isDefined=validations.isDefined,olHelper=webMappingOpenLayersHelper;return{eraseAll:_eraseAll,erase:_erase,intersect:_intersect,merge:_merge}}),angular.module("farmbuild.webmapping").factory("webMappingGoogleAddressSearch",function(validations,$log,webMappingOpenLayersHelper){function _init(targetElementId,openLayersProjection,olmap){var autocomplete=new google.maps.places.Autocomplete(document.getElementById(targetElementId),{componentRestrictions:countryRestrict});google.maps.event.addListener(autocomplete,"place_changed",function(){_onPlaceChanged(autocomplete,openLayersProjection,olmap)})}function _onPlaceChanged(autocomplete,openLayersProjection,olmap){var latLng,place=autocomplete.getPlace();place.geometry&&(latLng=place.geometry.location,_center(latLng,openLayersProjection,olmap))}function _transform(latLng,sourceProjection,destinationProjection){return ol.proj.transform([latLng.lng(),latLng.lat()],sourceProjection,destinationProjection)}function _center(latLng,openLayersProjection,olmap){var googleMapProjection="EPSG:3857",centerPoint=_transform(latLng,openLayersProjection,googleMapProjection);webMappingOpenLayersHelper.center(centerPoint,olmap)}var countryRestrict={country:"au"};return{init:_init}}),angular.module("farmbuild.webmapping").run(function(webmapping){});
//# sourceMappingURL=farmbuild-webmapping.min.js.map