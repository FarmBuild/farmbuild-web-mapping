"use strict";angular.module("farmbuild.webmapping",["farmbuild.core","farmbuild.farmdata"]).factory("webmapping",function(farmdata,validations,$log,$rootScope,geoJsonValidator,farmdataConverter,webMappingSession,webMappingProjections,webMappingInteractions,webMappingMeasurement,webMappingPaddocks,webMappingOpenLayersHelper,webMappingGoogleAddressSearch,webMappingGoogleAnalytics,webMappingParcels){$log.info("Welcome to Web Mapping...");var session=(validations.isDefined,webMappingSession),webMapping={session:session,farmdata:farmdata,validator:geoJsonValidator,toGeoJsons:farmdataConverter.toGeoJsons,toKml:farmdataConverter.toKml,toGeoJson:farmdataConverter.toGeoJson,exportGeoJson:farmdataConverter.exportGeoJson,exportKml:farmdataConverter.exportKml,actions:webMappingInteractions,paddocks:webMappingPaddocks,olHelper:webMappingOpenLayersHelper,ga:webMappingGoogleAnalytics,parcels:webMappingParcels,measurement:webMappingMeasurement,load:session.load,find:session.find,save:function(geoJsons){var farmData=session.find();return session.save(farmData,geoJsons)},"export":session["export"],create:farmdata.create,on:function(name,listener){return $rootScope.$on(name,listener)},update:session.update};return webMapping.version="1.1.0","undefined"==typeof window.farmbuild?window.farmbuild={webmapping:webMapping}:window.farmbuild.webmapping=webMapping,webMapping}),angular.module("farmbuild.webmapping").factory("webMappingConverter",function(validations,$log){function _openLayerFeatureToGeoJson(olFeature,dataProjection,featureProjection){return _isDefined(olFeature)?($log.info("Converting openlayer feature to geoJson ...",olFeature),_geoJSONFormat.writeFeatureObject(olFeature,{dataProjection:dataProjection,featureProjection:featureProjection})):void 0}function _openLayerFeaturesToGeoJson(olFeatures,dataProjection,featureProjection){return _isDefined(olFeatures)?($log.info("Converting openlayer feature to geoJson ...",olFeatures),_geoJSONFormat.writeFeaturesObject(olFeatures,{dataProjection:dataProjection,featureProjection:featureProjection})):void 0}function _geoJsonToOpenLayerFeature(feature,dataProjection,featureProjection){return _isDefined(feature)?($log.info("Converting geoJson feature to openlayer feature ...",feature),_geoJSONFormat.readFeature(feature,{dataProjection:dataProjection,featureProjection:featureProjection})):void 0}function _geoJsonToOpenLayerFeatures(features,dataProjection,featureProjection){return _isDefined(features)?($log.info("Converting geoJson feature to openlayer features ...",features),_geoJSONFormat.readFeatures(features,{dataProjection:dataProjection,featureProjection:featureProjection})):void 0}var _isDefined=validations.isDefined,_geoJSONFormat=new ol.format.GeoJSON;return{featureToGeoJson:_openLayerFeatureToGeoJson,featuresToGeoJson:_openLayerFeaturesToGeoJson,geoJsonToFeature:_geoJsonToOpenLayerFeature,geoJsonToFeatures:_geoJsonToOpenLayerFeatures}}),angular.module("farmbuild.webmapping").factory("webMappingGeoProcessing",function(validations,webMappingConverter,$log){function _eraseAll(clipee,clippers){if(_isDefined(clipee)&&_isDefined(clippers)){$log.info("erasing feature",clipee);var clipeeGeoJson=converter.featureToGeoJson(clipee);return clippers.forEach(function(clipper){var clipperGeoJson=converter.featureToGeoJson(clipper);try{clipeeGeoJson=turf.erase(clipeeGeoJson,clipperGeoJson)}catch(e){$log.warn("This operation is not supported,",e)}}),converter.geoJsonToFeature(clipeeGeoJson)}}function _erase(clipee,clipper){if(_isDefined(clipee)&&_isDefined(clipper)){$log.info("erasing feature 2 from 1",clipee,clipper);var clipped,clipeeGeoJson=converter.featureToGeoJson(clipee),cliperGeoJson=converter.featureToGeoJson(clipper);try{return clipped=turf.erase(clipeeGeoJson,cliperGeoJson),converter.geoJsonToFeature(clipped)}catch(e){$log.warn("This operation is not supported,",e)}}}function _intersect(olFeature1,olFeature2){$log.info("intersecting feature",olFeature1,olFeature2);var intersection,feature1=converter.featureToGeoJson(olFeature1),feature2=converter.featureToGeoJson(olFeature2);try{return intersection=turf.intersect(feature1,feature2),converter.geoJsonToFeature(intersection)}catch(e){$log.warn("This operation is not supported,",e)}}function _merge(olFeatures){$log.info("merging features ...",olFeatures);var properties,toMerge;toMerge=converter.featuresToGeoJson(olFeatures),properties={name:"merged "+(new Date).getTime()};try{return converter.geoJsonToFeature(turf.merge(toMerge),properties)}catch(e){$log.warn("This operation is not supported,",e)}}var _isDefined=validations.isDefined,converter=webMappingConverter;return{eraseAll:_eraseAll,erase:_erase,intersect:_intersect,merge:_merge}}),angular.module("farmbuild.webmapping").factory("webMappingDrawInteraction",function(validations,$log,$rootScope){function _create(map){function _init(){$log.info("draw interaction init ..."),map.addInteraction(drawInteraction),drawInteraction.setActive(!1),drawInteraction.on("drawend",function(e){drawingStatus=!1,"draw"===_mode&&$rootScope.$broadcast("web-mapping-draw-end",e.feature),"donut-draw"===_mode&&$rootScope.$broadcast("web-mapping-donut-draw-end",e.feature)}),drawInteraction.on("drawstart",function(event){$log.info("draw start ..."),drawingStatus=!0})}function _enable(mode){_mode=mode,drawInteraction.setActive(!0)}function _disable(){drawInteraction.setActive(!1)}function _finish(){drawInteraction.finishDrawing()}function _isDrawing(){return drawingStatus}function _discard(){drawingStatus=!1,_disable(),_enable(_mode)}var drawInteraction=new ol.interaction.Draw({source:new ol.source.Vector,type:"Polygon"}),drawingStatus=!1;return{init:_init,enable:_enable,disable:_disable,interaction:drawInteraction,isDrawing:_isDrawing,finish:_finish,discard:_discard}}{var _mode;validations.isDefined}return{create:_create}}),angular.module("farmbuild.webmapping").factory("webMappingInteractions",function(validations,$log,webMappingSelectInteraction,webMappingModifyInteraction,webMappingDrawInteraction,webMappingSnapInteraction,webMappingGeoProcessing,$rootScope){function _destroy(map){$log.info("destroying all interactions ..."),_isDefined(_select)&&_isDefined(_modify)&&_isDefined(_snap)&&_isDefined(_draw)&&(map.removeInteraction(_select.interaction),map.removeInteraction(_modify.interaction),map.removeInteraction(_draw.interaction),_snap.destroy(map),_select=void 0,_modify=void 0,_draw=void 0,_snap=void 0,_activeLayer=void 0,_activeLayerName=void 0,_mode=void 0)}function _init(map,farmLayerGroup,activeLayerName,snappingDefaultStatus,initKeyboardInteraction){if($log.info("interactions init ..."),_isDefined(activeLayerName)&&_isDefined(map)&&_isDefined(farmLayerGroup)){if(_farmLayerGroup=farmLayerGroup,_farmLayer=farmLayerGroup.getLayers().item(1),_paddocksLayer=farmLayerGroup.getLayers().item(0),_map=map,"paddocks"===activeLayerName)_activeLayer=_paddocksLayer;else{if("farm"!==activeLayerName)return;_activeLayer=_farmLayer,_farmName=_activeLayer.getSource().getFeatures()[0].getProperties().name}_select=webMappingSelectInteraction.create(map,_activeLayer),_modify=webMappingModifyInteraction.create(map,_select),_draw=webMappingDrawInteraction.create(map,farmLayerGroup),_snap=webMappingSnapInteraction.create(map,_farmLayer.getSource(),_paddocksLayer.getSource()),_mode="",_activeLayerName=activeLayerName,_select.init(),_modify.init(),_draw.init(),_snap.init(snappingDefaultStatus),initKeyboardInteraction&&_enableKeyboardShortcuts()}}function _addFeature(layer,feature,newProperties){var properties=newProperties||{};if(_isDefined(feature))return _isDefined(properties.name)||(properties.name="farm"===_activeLayerName?_farmName:"Paddock "+(new Date).getTime()),properties.geometry=feature.getProperties().geometry,feature.setProperties(properties),$log.info("adding feature ...",feature),layer.getSource().addFeature(feature),_clearSelections(),feature}function _remove(features,deselect){_isDefined(features)&&_isDefined(_activeLayer)&&(_isDefined(deselect)||(deselect=!0),$log.info("removing features ...",features),features.forEach(function(feature){try{_activeLayer.getSource().removeFeature(feature)}catch(e){$log.error(e)}}),deselect&&_clearSelections())}function _clip(featureToClip,farmLayers){if(_isDefined(farmLayers)&&_isDefined(farmLayers.getLayers())&&_isDefined(featureToClip)&&_isDefined(farmLayers.getLayers().item(0))&&_isDefined(farmLayers.getLayers().item(1))){$log.info("clipping feature ...",featureToClip);var paddockSource=farmLayers.getLayers().item(0).getSource(),farmSource=farmLayers.getLayers().item(1).getSource();return"paddocks"!==_activeLayerName||"draw"!==_mode&&"edit"!==_mode?"paddocks"===_activeLayerName&&"donut-draw"===_mode?_clipDonut(featureToClip):"farm"===_activeLayerName?_clipFarm(featureToClip,farmSource):void 0:_clipPaddocks(featureToClip,paddockSource,farmSource)}}function _clipPaddocks(featureToClip,paddockSource,farmSource){var paddocksFeatures,farmFeatures,clipped,properties=featureToClip.getProperties();if(farmSource.getFeatures()[0].getGeometry().getExtent()[0]===1/0)return void $log.error("please draw farm boundaries before adding paddock");if(_isDefined(properties.name)&&paddockSource.removeFeature(featureToClip),paddocksFeatures=paddockSource.getFeatures(),farmFeatures=farmSource.getFeatures(),properties=featureToClip.getProperties(),clipped=_transform.eraseAll(featureToClip,paddocksFeatures),clipped=_transform.intersect(clipped,farmFeatures[0]),clipped&&"GeometryCollection"===clipped.getGeometry().getType()){var temp=[];clipped.getGeometry().getGeometries().forEach(function(f){"LineString"!==f.getType()&&"Point"!==f.getType()&&temp.push(new ol.Feature({geometry:new ol.geom.Polygon(f.getCoordinates())}))});var merged=_transform.merge(temp);merged.setProperties({name:clipped.getProperties().name,_id:clipped.getProperties()._id}),clipped=merged}return _addFeature(_activeLayer,clipped,properties)}function _clipDonut(donutFeature){var properties,paddockFeature=_donutContainer,clipped=_transform.erase(paddockFeature,donutFeature);return _isDefined(paddockFeature)?(properties=paddockFeature.getProperties(),_isDefined(clipped)?(_activeLayer.getSource().removeFeature(paddockFeature),_addFeature(_activeLayer,clipped,properties)):void 0):void $log.error("donut must be inside a paddock")}function _clipFarm(featureToClip,farmSource){var properties,result,clipped=featureToClip;return farmSource.getFeatures()[0]&&(properties=farmSource.getFeatures()[0].getProperties()),farmSource.getFeatures()[0]&&farmSource.getFeatures()[0].getGeometry().getExtent()[0]!==1/0&&(clipped=_transform.erase(featureToClip,farmSource.getFeatures()[0]),_addFeature(_activeLayer,clipped,properties),clipped=_transform.merge(farmSource.getFeatures())),_remove(farmSource.getFeatures(),!1),result=_addFeature(_activeLayer,clipped,properties),_clearSelections(),result}function _merge(features){$log.info("merging features ...",features),_remove(features,!1),_addFeature(_activeLayer,_transform.merge(features)),_clearSelections()}function _selectedFeatures(){return _isDefined(_select)&&_isDefined(_select.interaction)?($log.info("Selected features ...",_select.interaction.getFeatures()),_select.interaction.getFeatures()):void 0}function _enableEditing(){_isDefined(_mode)&&"edit"!==_mode&&"measure"!==_mode&&($log.info("editing enabled"),_mode="edit",_select.enable(),_modify.enable(),_draw.disable())}function _enableDrawing(){_isDefined(_mode)&&"draw"!==_mode&&"measure"!==_mode&&($log.info("drawing enabled"),_mode="draw",_select.disable(),_modify.disable(),_draw.enable(_mode))}function _enableDonutDrawing(){_isDefined(_mode)&&"donut-draw"!==_mode&&($log.info("donut drawing enabled"),_donutContainer=_selectedFeatures().item(0),_mode="donut-draw",_select.disable(),_modify.disable(),_draw.enable(_mode))}function _snapParcels(parcels){return _isDefined(parcels)&&_isDefined(_snap)?void _snap.addFeatures(parcels):void $log.error("Snap interaction is undefined, select a layer to start!")}function _clearSelections(){_select.interaction.getFeatures().clear()}function _isDrawing(){return _isDefined(_mode)?_draw.isDrawing():void 0}function _finishDrawing(){_isDefined(_mode)&&_draw.finish()}function _discardDrawing(){_isDefined(_mode)&&(_draw.discard(),_selectedFeatures().clear())}function _isEditing(){return _isDefined(_mode)?_select.interaction.getFeatures().getLength()>0:void 0}function _disableSnapping(){return _isDefined(_snap)?_snap.disable():void 0}function _isSnappingActive(){return _isDefined(_snap)?_snap.interaction.getActive():void 0}function _enableSnapping(){return _isDefined(_snap)?_snap.enable():void 0}function _enableKeyboardShortcuts(){function onKeyDown(event){var selectedFeatures=_selectedFeatures();if(_isDefined(selectedFeatures))return 46==event.keyCode||8==event.keyCode?(_remove(selectedFeatures),event.preventDefault(),event.stopPropagation(),!1):13==event.keyCode?(_isDrawing()?_finishDrawing():_clip(_selectedFeatures().item(0),_farmLayerGroup),event.preventDefault(),event.stopPropagation(),!1):27==event.keyCode&&_isDrawing()?(_discardDrawing(),event.preventDefault(),event.stopPropagation(),!1):void 0}var element=_map.getTargetElement();element.tabIndex=0,element.addEventListener("keydown",onKeyDown)}var _select,_modify,_draw,_snap,_activeLayer,_activeLayerName,_mode,_farmLayerGroup,_farmLayer,_paddocksLayer,_map,_farmName,_donutContainer,_isDefined=validations.isDefined,_transform=webMappingGeoProcessing;return $rootScope.$on("web-mapping-measure-start",function(event,data){_isDefined(_select)&&_isDefined(_modify)&&_isDefined(_draw)&&(_select.disable(),_modify.disable(),_draw.disable(),_mode="measure")}),$rootScope.$on("web-mapping-measure-end",function(event,data){_isDefined(_select)&&_isDefined(_modify)&&_isDefined(_draw)&&(_select.enable(),_modify.enable(),_draw.disable(),_mode="edit")}),$rootScope.$on("web-mapping-draw-end",function(event,feature){$log.info("draw end ..."),_clip(feature,_farmLayerGroup)}),$rootScope.$on("web-mapping-donut-draw-end",function(event,feature){$log.info("donut draw end ..."),_select.interaction.getFeatures().push(_clip(feature,_farmLayerGroup)),_donutContainer=null}),{init:_init,destroy:_destroy,editing:{enable:_enableEditing,isEditing:_isEditing},drawing:{discard:_discardDrawing,finish:_finishDrawing,enable:_enableDrawing,isDrawing:_isDrawing},donut:{enable:_enableDonutDrawing},snapping:{enable:_enableSnapping,disable:_disableSnapping,active:_isSnappingActive},features:{selections:_selectedFeatures,clip:_clip,merge:_merge,remove:_remove},parcels:{snap:_snapParcels},keyboardShortcuts:{enable:_enableKeyboardShortcuts}}}),angular.module("farmbuild.webmapping").factory("webMappingModifyInteraction",function(validations,$log){function _create(map,select){function _init(){$log.info("modify interaction init ..."),map.addInteraction(modifyInteraction),modifyInteraction.setActive(!1)}function _enable(){modifyInteraction.setActive(!0)}function _disable(){modifyInteraction.setActive(!1)}var modifyInteraction=new ol.interaction.Modify({features:select.interaction.getFeatures()});return{init:_init,enable:_enable,disable:_disable,interaction:modifyInteraction}}validations.isDefined;return{create:_create}}),angular.module("farmbuild.webmapping").factory("webMappingSelectInteraction",function(validations,$rootScope,$log){function _create(map,layer,multi){function _init(){$log.info("select interaction init ..."),map.addInteraction(selectInteraction),selectInteraction.setActive(!1),selectInteraction.getFeatures().on("change:length",function(){var selections=selectInteraction.getFeatures();return selections.getLength()>0?void $rootScope.$broadcast("web-mapping-feature-select",selectInteraction.getFeatures().item(0)):void $rootScope.$broadcast("web-mapping-feature-deselect")})}function _enable(){selectInteraction.setActive(!0)}function _disable(){selectInteraction.setActive(!1)}_isDefined(multi)||(multi=!1);var selectConfig={multi:multi,layers:[layer]};multi?selectConfig.addCondition=ol.events.condition.shiftKeyOnly:(selectConfig.addCondition=ol.events.condition.never,selectConfig.toggleCondition=ol.events.condition.never);var selectInteraction=new ol.interaction.Select(selectConfig);return{init:_init,enable:_enable,disable:_disable,interaction:selectInteraction}}var _isDefined=validations.isDefined;return{create:_create}}),angular.module("farmbuild.webmapping").factory("webMappingSnapInteraction",function(validations,$log){function _create(map,farmSource,paddocksSource){function _enable(){snapInteraction.setActive(!0)}function _disable(){snapInteraction.setActive(!1)}function _addFeatures(parcels){parcels.forEach(function(parcel){snapInteraction.addFeature(parcel)}),snapVisibleLayer.getSource().addFeatures(parcels)}function _init(active){$log.info("snap interaction init ..."),map.addInteraction(snapInteraction),snapInteraction.setActive(active)}function _destroy(map){return _isDefined(map)?(map.removeLayer(snapVisibleLayer),void map.removeInteraction(snapInteraction)):void $log.error("There is a problem with input parameters, map object is not defined")}if(!_isDefined(map)||!_isDefined(farmSource)||!_isDefined(paddocksSource))return void $log.error("There is a problem with input parameters, please refer to api for more information");var snapVisibleLayer,snapInteraction=new ol.interaction.Snap({source:paddocksSource});return snapInteraction.addFeature(farmSource.getFeatures()[0]),snapVisibleLayer=new ol.layer.Vector({source:new ol.source.Vector,title:"Rural Parcels",style:new ol.style.Style({stroke:new ol.style.Stroke({color:"rgba(238,238,238,.7)",width:1})})}),map.addLayer(snapVisibleLayer),{init:_init,enable:_enable,disable:_disable,addFeatures:_addFeatures,interaction:snapInteraction,destroy:_destroy}}var _isDefined=validations.isDefined;return{create:_create}}),angular.module("farmbuild.webmapping").factory("webMappingMeasurement",function(validations,webMappingConverter,$log){function _areas(features){$log.info("calculating area of features ...",features);try{return 1e-4*turf.area(features)}catch(e){$log.error(e)}}function _area(feature){$log.info("calculating area of polygon ...",feature),feature=_converter.featureToGeoJson(feature,_openlayersDefaultProjection,_googleProjection);try{return 1e-4*turf.area(feature)}catch(e){$log.error(e)}}function _length(feature){$log.info("calculating length of line ...",feature),feature=_converter.featureToGeoJson(feature,_openlayersDefaultProjection,_googleProjection);try{return 1e3*turf.lineDistance(feature,"kilometers")}catch(e){$log.error(e)}}var _googleProjection=(validations.isDefined,"EPSG:3857"),_openlayersDefaultProjection="EPSG:4326",_converter=webMappingConverter;return{area:_area,areas:_areas,length:_length}}),angular.module("farmbuild.webmapping").factory("webMappingOpenLayersHelper",function(validations,webMappingMeasureControl,webMappingSnapControl,webMappingGoogleAddressSearch,webMappingLayerSwitcherControl,webMappingTransformation,webMappingConverter,$log){function addControlsToGmap(gmap,targetElement){gmap.controls[google.maps.ControlPosition.TOP_LEFT].push(targetElement),targetElement.parentNode.removeChild(targetElement)}function addControlsToOlMap(map,extent){extent&&(_ZoomToExtentControl=new ol.control.ZoomToExtent({extent:extent}),map.addControl(_ZoomToExtentControl)),map.addControl(new ol.control.ScaleLine),map.addControl(new webMappingMeasureControl.create(map,"Polygon")),map.addControl(new webMappingMeasureControl.create(map,"LineString")),map.addControl(new webMappingSnapControl.create),map.addControl(new ol.control.LayerSwitcher({tipLabel:"Switch on/off farm layers"}))}function _initWithGoogleMap(map,extent,gmap,targetElement){if(_isDefined(gmap)&&_isDefined(map)){$log.info("integrating google map ...");var view=map.getView();view.on("change:center",function(){var center=ol.proj.transform(view.getCenter(),_googleProjection,_openlayersDefaultProjection);gmap.setCenter(new google.maps.LatLng(center[1],center[0]))}),view.on("change:resolution",function(){gmap.setZoom(view.getZoom())}),window.onresize=function(){var center=_transform.toGoogleLatLng(view.getCenter(),_openlayersDefaultProjection);google.maps.event.trigger(gmap,"resize"),gmap.setCenter(center)},_init(map,extent),addControlsToGmap(gmap,targetElement)}}function _init(map,extent){var defaults={centerNew:[-36.22488327137526,145.5826132801325],zoomNew:6},view=map.getView();$log.info("farm extent: %j",extent),extent[0]===1/0?(view.setCenter(ol.proj.transform([defaults.centerNew[1],defaults.centerNew[0]],"EPSG:4283",_googleProjection)),view.setZoom(defaults.zoomNew)):view.fitExtent(extent,map.getSize()),addControlsToOlMap(map,extent)}function _exportGeometry(source,dataProjection){if(_isDefined(source)){var format=new ol.format.GeoJSON;try{var result=format.writeFeaturesObject(source.getFeatures(),{dataProjection:dataProjection,featureProjection:_googleProjection});return angular.forEach(result.features,function(feature){feature.geometry.crs={properties:{name:dataProjection}}}),result}catch(e){$log.error(e)}}}function _center(coordinates,map){_isDefined(coordinates)&&_isDefined(map)&&($log.info("centring view ..."),map.getView().setCenter(coordinates),map.getView().setZoom(15))}function _createPaddocksLayer(paddocksGeometry,dataProjection){if(_isDefined(paddocksGeometry)&&_isDefined(dataProjection)){$log.info("creating paddocks vector layer ...",dataProjection,_googleProjection);var paddocksSource=new ol.source.Vector({features:(new ol.format.GeoJSON).readFeatures(paddocksGeometry,{dataProjection:dataProjection,featureProjection:_googleProjection})});return new ol.layer.Vector({source:paddocksSource,title:"Paddocks",style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.3)"}),stroke:new ol.style.Stroke({color:"#319FD3",width:1})})})}}function _createFarmLayer(farmGeometry,dataProjection){if(_isDefined(farmGeometry)&&_isDefined(dataProjection)){$log.info("creating farm vector layer ...",dataProjection,_googleProjection);var farmSource=new ol.source.Vector({features:(new ol.format.GeoJSON).readFeatures(farmGeometry,{dataProjection:dataProjection,featureProjection:_googleProjection})});return new ol.layer.Vector({source:farmSource,title:"Farm",style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0)"}),stroke:new ol.style.Stroke({color:"#ff6600",width:3})})})}}function _createFarmLayers(geometry,dataProjection,featureProjection){return new ol.layer.Group({title:"Farm layers",layers:[_createPaddocksLayer(geometry.paddocks,dataProjection,featureProjection),_createFarmLayer(geometry.farm,dataProjection,featureProjection)]})}function _createBaseLayers(){var vicMapImageryLayer=new ol.layer.Tile({title:"VicMAP Imagery",type:"base",visible:!0,source:new ol.source.TileWMS({url:"http://api.maps.vic.gov.au/vicmapapi-mercator/map-wm/wms",params:{LAYERS:"SATELLITE_WM",VERSION:"1.1.1"}})}),vicMapStreetLayer=new ol.layer.Tile({title:"VicMAP Street",type:"base",visible:!1,source:new ol.source.TileWMS({url:"http://api.maps.vic.gov.au/vicmapapi-mercator/map-wm/wms",params:{LAYERS:"WEB_MERCATOR",VERSION:"1.1.1"}})});return new ol.layer.Group({title:"Base maps",layers:[vicMapImageryLayer,vicMapStreetLayer]})}function _createBaseLayersWithGoogleMaps(){var vicMapImageryLayer=new ol.layer.Tile({title:"VicMAP Imagery",type:"base",visible:!1,source:new ol.source.TileWMS({url:"http://api.maps.vic.gov.au/vicmapapi-mercator/map-wm/wms",params:{LAYERS:"SATELLITE_WM",VERSION:"1.1.1"}})}),vicMapStreetLayer=new ol.layer.Tile({title:"VicMAP Street",type:"base",visible:!1,source:new ol.source.TileWMS({url:"http://api.maps.vic.gov.au/vicmapapi-mercator/map-wm/wms",params:{LAYERS:"WEB_MERCATOR",VERSION:"1.1.1"}})}),googleImageryLayer=new ol.layer.Tile({title:"Google Imagery",type:"base",visible:!0}),googleStreetLayer=new ol.layer.Tile({title:"Google Street",type:"base",visible:!1});return new ol.layer.Group({title:"Base maps",layers:[vicMapImageryLayer,vicMapStreetLayer,googleStreetLayer,googleImageryLayer]})}function _reload(map,geoJsons,dataProjection){var farmLayers=map.getLayers().item(1).getLayers(),farmSource=farmLayers.item(1).getSource(),paddocksSource=farmLayers.item(0).getSource(),farmFeatures=_converter.geoJsonToFeatures(geoJsons.farm,dataProjection,_googleProjection),paddockFeatures=_converter.geoJsonToFeatures(geoJsons.paddocks,dataProjection,_googleProjection);farmSource.clear(),paddocksSource.clear(),farmSource.addFeatures(farmFeatures),paddocksSource.addFeatures(paddockFeatures)}function _initGoogleAddressSearch(textInputElement,olmap){function onPlaceChanged(latLng){latLng=_transform.fromGoogleLatLng(latLng),_center(latLng,olmap)}_isDefined(textInputElement)&&_isDefined(olmap)&&($log.info("init google address search ...",textInputElement),webMappingGoogleAddressSearch.init(textInputElement,onPlaceChanged))}function _updateZoomToExtent(){var map;_isDefined(_ZoomToExtentControl)&&(map=_ZoomToExtentControl.getMap(),map.removeControl(_ZoomToExtentControl),_ZoomToExtentControl=new ol.control.ZoomToExtent({extent:map.getLayers().item(1).getLayers().item(1).getSource().getExtent()}),map.addControl(_ZoomToExtentControl))}function _farmLayer(map){return _isDefined(map)&&_isDefined(map.getLayers().item(1))&&_isDefined(map.getLayers().item(1).getLayers()||!_isDefined(2===map.getLayers().item(1).getLayers().getLength()))?map.getLayers().item(1).getLayers().item(1):void 0}function _paddocksLayer(map){return _isDefined(map)&&_isDefined(map.getLayers().item(1))&&_isDefined(map.getLayers().item(1).getLayers()||!_isDefined(2===map.getLayers().item(1).getLayers().getLength()))?map.getLayers().item(1).getLayers().item(0):void 0}function _farmLayerGroup(map){return _isDefined(map)&&_isDefined(map.getLayers().item(1))?map.getLayers().item(1):void 0}var _ZoomToExtentControl,_isDefined=validations.isDefined,_googleProjection="EPSG:3857",_openlayersDefaultProjection="EPSG:4326",_transform=webMappingTransformation,_converter=webMappingConverter;return{init:_init,exportGeometry:_exportGeometry,center:_center,initWithGoogleMap:_initWithGoogleMap,createFarmLayers:_createFarmLayers,createBaseLayers:_createBaseLayers,createBaseLayersWithGoogleMaps:_createBaseLayersWithGoogleMaps,farmLayer:_farmLayer,paddocksLayer:_paddocksLayer,farmLayerGroup:_farmLayerGroup,reload:_reload,initGoogleAddressSearch:_initGoogleAddressSearch,updateExtent:_updateZoomToExtent}}),angular.module("farmbuild.webmapping").factory("webMappingPaddocks",function($log,validations,farmdata){function _findByCoordinate(coordinate,vectorLayer){var found;if(_isDefined(coordinate)&&_isDefined(vectorLayer)){var paddocks=vectorLayer.getSource().getFeaturesAtCoordinate(coordinate);return paddocks&&paddocks.length>0&&(found=vectorLayer.getSource().getFeaturesAtCoordinate(coordinate)[0]),$log.info("looking up for a paddock at ",coordinate,found),found}}var _isDefined=validations.isDefined;return{findByCoordinate:_findByCoordinate,types:farmdata.paddockTypes,groups:farmdata.paddockGroups}}),angular.module("farmbuild.webmapping").factory("webMappingParcels",function($log,$http,validations,webMappingInteractions,webMappingConverter){function _load(serviceUrl,extent,extentDataProjection,responseProjection){var config={params:{service:"WFS",version:"1.0.0",request:"GetFeature",typeName:"farmbuild:ruralparcels",outputFormat:"text/javascript",format_options:"callback:JSON_CALLBACK",srsname:responseProjection,bbox:extent.join(",")+","+extentDataProjection}};return _isDefined(serviceUrl)&&_isDefined(extent)&&_isDefined(extentDataProjection)&&_isDefined(responseProjection)?($log.info("Loading parcels information for the extent: ",extent),$http({method:"JSONP",url:serviceUrl,params:config.params}).success(function(data,status){$log.info("loaded parcels successfully.",status,data);var olFeatures=converter.geoJsonToFeatures({type:"FeatureCollection",features:data.features});webMappingInteractions.parcels.snap(olFeatures)}).error(function(data,status){$log.error("loading parcels failed!!",status,data)})):void $log.error("There is a problem with input parameters, please refer to api for more information")}var _isDefined=validations.isDefined,converter=webMappingConverter;return{load:_load}}),angular.module("farmbuild.webmapping").factory("webMappingProjections",function($log,farmdata){var webMappingProjections={supported:farmbuild.farmdata.crsSupported};return farmdata.crsSupported.forEach(function(crs){proj4.defs(crs.name,crs.projection)}),webMappingProjections}),angular.module("farmbuild.webmapping").factory("webMappingSession",function($log,farmdata,validations,webMappingMeasurement,webMappingConverter){function load(farmData){var loaded=farmdata.load(farmData);return _isDefined(loaded)?farmData:void 0}function save(farmData,geoJsons){var featureForArea,_googleProjection="EPSG:3857",_openlayersDefaultProjection="EPSG:4326";return _isDefined(farmData)?(featureForArea=webMappingConverter.geoJsonToFeatures(geoJsons.farm,farmData.geometry.crs,_googleProjection),featureForArea=webMappingConverter.featuresToGeoJson(featureForArea,_openlayersDefaultProjection,_googleProjection),farmData.area=webMappingMeasurement.areas(featureForArea),farmData.name=geoJsons.farm.features[0].properties.name,$log.info("new geoJson",geoJsons),farmdata.merge(farmData,geoJsons)):void $log.error("Unable to save the undefined farmData!")}var webMappingSession={},_isDefined=validations.isDefined;return webMappingSession.load=load,webMappingSession.save=save,webMappingSession.clear=farmdata.session.clear,webMappingSession.isLoadFlagSet=farmdata.session.isLoadFlagSet,webMappingSession.find=function(){return farmdata.session.find()},webMappingSession["export"]=function(document,farmData,geoJsons){return farmdata.session["export"](document,save(farmData,geoJsons))},webMappingSession.update=farmdata.update,webMappingSession}),angular.module("farmbuild.webmapping").factory("webMappingTransformation",function(validations,$log){function _transformToGoogleLatLng(latLng,destinationProjection){if(_isDefined(latLng)&&_isDefined(destinationProjection)){var transformed=ol.proj.transform(latLng,_googleProjection,destinationProjection);return new google.maps.LatLng(transformed[1],transformed[0])}}function _transformFromGoogleLatLng(latLng){return _isDefined(latLng)?ol.proj.transform([latLng.lng(),latLng.lat()],_openLayersDefaultProjection,_googleProjection):void 0}var _isDefined=validations.isDefined,_openLayersDefaultProjection="EPSG:4326",_googleProjection="EPSG:3857";return{fromGoogleLatLng:_transformFromGoogleLatLng,toGoogleLatLng:_transformToGoogleLatLng}}),angular.module("farmbuild.webmapping").factory("webMappingLayerSwitcherControl",function(validations,$rootScope,$log){return ol.control.LayerSwitcher=function(opt_options){var options=opt_options||{},tipLabel=options.tipLabel?options.tipLabel:"Legend";this.mapListeners=[],this.hiddenClassName="ol-unselectable ol-control layer-switcher",this.shownClassName=this.hiddenClassName+" shown";var element=document.createElement("div");element.className=this.hiddenClassName;var button=document.createElement("button");button.setAttribute("title",tipLabel),element.appendChild(button),this.panel=document.createElement("div"),this.panel.className="panel",element.appendChild(this.panel);var this_=this;element.onmouseover=function(e){this_.showPanel()},button.onclick=function(e){this_.showPanel()},element.onmouseout=function(e){e=e||window.event,element.contains(e.toElement)||this_.hidePanel()},ol.control.Control.call(this,{element:element,target:options.target})},ol.inherits(ol.control.LayerSwitcher,ol.control.Control),ol.control.LayerSwitcher.prototype.showPanel=function(){this.element.className!=this.shownClassName&&(this.element.className=this.shownClassName,this.renderPanel())},ol.control.LayerSwitcher.prototype.hidePanel=function(){this.element.className!=this.hiddenClassName&&(this.element.className=this.hiddenClassName)},ol.control.LayerSwitcher.prototype.renderPanel=function(){for(this.ensureTopVisibleBaseLayerShown_();this.panel.firstChild;)this.panel.removeChild(this.panel.firstChild);

var ul=document.createElement("ul");this.panel.appendChild(ul),this.renderLayers_(this.getMap(),ul)},ol.control.LayerSwitcher.prototype.setMap=function(map){for(var i=0;i<this.mapListeners.length;i++)this.getMap().unByKey(this.mapListeners[i]);if(this.mapListeners.length=0,ol.control.Control.prototype.setMap.call(this,map),map){var this_=this;this.mapListeners.push(map.on("pointerdown",function(){this_.hidePanel()})),this.renderPanel()}},ol.control.LayerSwitcher.prototype.ensureTopVisibleBaseLayerShown_=function(){var lastVisibleBaseLyr;ol.control.LayerSwitcher.forEachRecursive(this.getMap(),function(l,idx,a){"base"===l.get("type")&&l.getVisible()&&(lastVisibleBaseLyr=l)}),lastVisibleBaseLyr&&this.setVisible_(lastVisibleBaseLyr,!0)},ol.control.LayerSwitcher.prototype.setVisible_=function(lyr,visible){var map=this.getMap();lyr.setVisible(visible),visible&&"base"===lyr.get("type")&&ol.control.LayerSwitcher.forEachRecursive(map,function(l,idx,a){l!=lyr&&"base"===l.get("type")&&l.setVisible(!1)})},ol.control.LayerSwitcher.prototype.renderLayer_=function(lyr,idx){var this_=this,li=document.createElement("li"),lyrTitle=lyr.get("title"),lyrId=lyr.get("title").replace(" ","-")+"_"+idx,label=document.createElement("label");if(lyr.getLayers){li.className="group",label.innerHTML=lyrTitle,li.appendChild(label);var ul=document.createElement("ul");li.appendChild(ul),this.renderLayers_(lyr,ul)}else{var input=document.createElement("input");"base"===lyr.get("type")?(input.type="radio",input.name="base"):input.type="checkbox",input.id=lyrId,input.checked=lyr.get("visible"),input.onchange=function(e){$rootScope.$broadcast("web-mapping-base-layer-change",{layer:lyr}),this_.setVisible_(lyr,e.target.checked)},li.appendChild(input),label.htmlFor=lyrId,label.innerHTML=lyrTitle,li.appendChild(label)}return li},ol.control.LayerSwitcher.prototype.renderLayers_=function(lyr,elm){for(var l,lyrs=lyr.getLayers().getArray().slice().reverse(),i=0;i<lyrs.length;i++)l=lyrs[i],l.get("title")&&elm.appendChild(this.renderLayer_(l,i))},ol.control.LayerSwitcher.forEachRecursive=function(lyr,fn){lyr.getLayers().forEach(function(lyr,idx,a){fn(lyr,idx,a),lyr.getLayers&&ol.control.LayerSwitcher.forEachRecursive(lyr,fn)})},{}}),angular.module("farmbuild.webmapping").factory("webMappingMeasureControl",function(validations,webMappingMeasurement,$rootScope,$log){function _create(map,type){function _measureControl(type){var button=document.createElement("button");button.innerHTML=letter;var handleMeasure=function(e){drawInteraction.setActive(!drawInteraction.getActive()),element.className=baseCssClass+cssClass+(drawInteraction.getActive()?" active":""),$rootScope.$broadcast("web-mapping-measure-start")};button.addEventListener("click",handleMeasure,!1),button.addEventListener("touchstart",handleMeasure,!1);var element=document.createElement("div");element.className=baseCssClass+cssClass,element.title="Measure "+cssClass,element.appendChild(button),ol.control.Control.call(this,{element:element,target:options.target})}var letter,cssClass,source=new ol.source.Vector,baseCssClass="measure ol-unselectable ol-control ",drawInteraction=new ol.interaction.Draw({source:source,type:type,style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"rgba(0, 0, 0, 0.5)",lineDash:[10,10],width:2}),image:new ol.style.Circle({radius:5,stroke:new ol.style.Stroke({color:"rgba(0, 0, 0, 0.7)"}),fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"})})})}),options={};return"Polygon"==type?(letter="A",cssClass="area"):(letter="L",cssClass="length"),drawInteraction.on("drawend",function(evt){"Polygon"==type?$rootScope.$broadcast("web-mapping-measure-end",{value:_measurement.area(evt.feature),unit:"hectares"}):$rootScope.$broadcast("web-mapping-measure-end",{value:_measurement.length(evt.feature),unit:"metres"}),drawInteraction.setActive(!1),document.getElementsByClassName(baseCssClass+cssClass)[0].className=baseCssClass+cssClass},this),map.addInteraction(drawInteraction),drawInteraction.setActive(!1),ol.inherits(_measureControl,ol.control.Control),new _measureControl(type)}var _measurement=(validations.isDefined,webMappingMeasurement);return{create:_create}}),angular.module("farmbuild.webmapping").factory("webMappingSnapControl",function(validations,$rootScope,$log){function _create(){function toggle(e){var eventToCast;farmbuild.webmapping.actions.snapping.active()?(farmbuild.webmapping.actions.snapping.disable(),eventToCast="web-mapping-snap-disabled",element.className=baseCssClass,element.title="Enable snapping"):(farmbuild.webmapping.actions.snapping.enable(),eventToCast="web-mapping-snap-enabled",element.className=baseCssClass+"active",element.title="Disable snapping"),$rootScope.$broadcast(eventToCast)}var baseCssClass="snap ol-unselectable ol-control ",letter="S",options={},button=document.createElement("button");button.innerHTML=letter,button.addEventListener("click",toggle,!1),button.addEventListener("touchstart",toggle,!1);var element=document.createElement("div");element.className=baseCssClass+" active",element.title="Disable snapping",element.appendChild(button),ol.control.Control.call(this,{element:element,target:options.target})}validations.isDefined;return ol.inherits(_create,ol.control.Control),{create:_create}}),angular.module("farmbuild.webmapping").factory("webMappingGoogleAddressSearch",function(validations,$log){function _init(targetElementId,onPlaceChangedCallback){if(!_isDefined(google)||!_isDefined(google.maps)||!_isDefined(google.maps.places))return void $log.error("google.maps.places is not defined, please make sure that you have included google places library in your html page.");if(_isDefined(targetElementId)&&_isDefined(onPlaceChangedCallback)){var autocomplete=new google.maps.places.Autocomplete(document.getElementById(targetElementId),{componentRestrictions:countryRestrict});google.maps.event.addListener(autocomplete,"place_changed",function(){_onPlaceChanged(autocomplete,onPlaceChangedCallback)})}}function _onPlaceChanged(autocomplete,onPlaceChangedCallback){var latLng,place=autocomplete.getPlace();place.geometry&&(latLng=place.geometry.location,_isDefined(onPlaceChangedCallback)&&"function"==typeof onPlaceChangedCallback&&onPlaceChangedCallback(latLng))}var countryRestrict={country:"au"},_isDefined=validations.isDefined;return{init:_init}}),angular.module("farmbuild.webmapping").factory("webMappingGoogleAnalytics",function($log,validations,googleAnalytics){function _trackWebMapping(clientName){return _isDefined(clientName)?($log.info("googleAnalyticsWebMapping.trackWebMapping clientName: %s",clientName),void googleAnalytics.track(api,clientName)):void $log.error("client name is not specified")}var api="farmbuild-webmapping",_isDefined=validations.isDefined;return{trackWebMapping:_trackWebMapping}}),angular.module("farmbuild.webmapping").run(function(webmapping){}),angular.injector(["ng","farmbuild.webmapping"]);
//# sourceMappingURL=farmbuild-webmapping.min.js.map